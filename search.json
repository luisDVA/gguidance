[{"path":"https://teunbrand.github.io/gguidance/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Teun van den Brand Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"a-primer-on-position-guides","dir":"Articles","previous_headings":"","what":"A primer on position guides","title":"Axes","text":"axis guide can specified two places: scale, guides() function. can use string naming type guide omitting \"guide_\" prefix function, .e. \"axis\". want customise axis, can use function . example code setting axis scale. don’t need set scale parameters, shorter use guides() function. Setting secondary axes works much way. sec_axis() dup_axis() function guide argument can used. use guides() function, can set x.sec y.sec guides. axis extensions {gguidance} specified identically vanilla {ggplot2}. naming pattern functions generally guide_axis_{type}(). Therefore, use axes string, can use \"axis_{type}\".","code":"example +   scale_x_continuous(guide = \"axis\") +   scale_y_continuous(guide = guide_axis(angle = 45)) example +   guides(x = \"axis\", y = guide_axis(angle = 45)) example +   scale_x_continuous(sec.axis = dup_axis(guide = guide_axis(angle = 45))) +   guides(y.sec = \"axis\")"},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"nested-axes","dir":"Articles","previous_headings":"","what":"Nested axes","title":"Axes","text":"guide_axis_nested() function constructs axis guides can indicate ranges values. two ways use : (1) ranges can inferred labels (2) can manually set ranges interest.","code":""},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"ranges-from-labels","dir":"Articles","previous_headings":"Nested axes","what":"Ranges from labels","title":"Axes","text":"default behaviour guide_axis_nested() infer ranges axis labels. inferred trying split labels based separator. interaction() function convenient , sorts levels outer variable automatically inserts \".\" separator, works well behaviour guide_axis_nested().  However, beware default separator non-alphanumeric series characters. can give problems labels already contain character. example , interaction() inserting \".\" separator, also decimal notation dose variable contains \".\".  way solve issue change interaction() separator decimal notation, instruct axis use separator.","code":"ggplot(mpg, aes(y = displ, x = interaction(year, drv))) +   geom_jitter(width = 0.2) +   labs(     x = \"Year / Drive Train\",     y = \"Engine Displacement\"   ) +   guides(x = \"axis_nested\") ggplot(ToothGrowth, aes(interaction(dose, supp), y = len)) +   geom_jitter(width = 0.2) +   labs(     y = \"Tooth Length\",     x = \"Dose / Supplement type\"   ) +   guides(x = \"axis_nested\") #> Warning: Not all labels in `guide_axis_nested()` can be split into equal lengths. #> ℹ Is \"[^[:alnum:]]+\" the correct `sep` argument? ggplot(ToothGrowth, aes(interaction(dose, supp, sep = \";\"), y = len)) +   geom_jitter(width = 0.2) +   labs(     y = \"Tooth Length\",     x = \"Dose / Supplement type\"   ) +   guides(x = guide_axis_nested(sep = \";\"))"},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"manual-ranges","dir":"Articles","previous_headings":"Nested axes","what":"Manual ranges","title":"Axes","text":"alternative inferring ranges labels, manually set ranges. can use general annotation. Every range parametrised range_start range_end location. Optionally, can specify range_name make labels. , ’re using presidential dataset provide annotations economics dataset.  Alternatively, can use range_data range_mapping arguments similar way layers. can see example ranges dodged. automatically occurs ranges overlap one another. override dodging ranges, one can set level variable range_mapping, use range_level directly.","code":"econ <- ggplot(economics, aes(date, unemploy)) +   geom_line() +   labs(x = \"Date\", y = \"Unemployment\") +   # To prevent the last label from being cut off   theme(plot.margin = margin(5.5, 11, 5.5, 5.5))  econ +   guides(x = guide_axis_nested(     range_start = presidential$start,     range_end   = presidential$end,     range_name  = presidential$name   )) econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(start = start, end = end, name = name)   )) econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(       start = start, end = end, name = name,        level = rep(3:1, length.out = nrow(presidential))     )   ))"},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"brackets","dir":"Articles","previous_headings":"Nested axes > Styling","what":"Brackets","title":"Axes","text":"plain line available option displaying ranges. selection brackets choose , one \"square\" bracket. width height bracket occupies, can set bracket_size argument.  brackets can specified three ways: (1) can constructed bracket function, (2) can string naming function without bracket_-prefix (3) can give 2-column matrix line coordinates. option (2), functions take parameters influence example curvature brackets, , can use function instead string need tweak. , brackets come {gguidance} displayed.  option (3), example shows can describe bracket 2-column matrix. Note horizontal axes, 1st column y-direction 2nd column x-direction. vertical axes, flipped.","code":"econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(start = start, end = end, name = name),     bracket       = \"square\",     bracket_size  = unit(1, \"mm\")   )) # Listing all the bracket names and their functions bracket_list <- list(   \"sigmoid\" = bracket_sigmoid(),   \"atan\"    = bracket_atan(),   \"curvy\"   = bracket_curvy(),   \"line\"    = bracket_line(),   \"round\"   = bracket_round(),   \"chevron\" = bracket_chevron(),   \"square\"  = bracket_square() )  # Reshaping data type     <- rep.int(names(bracket_list), lengths(bracket_list) / 2) brackets <- as.data.frame(do.call(rbind, bracket_list)) brackets <- transform(   brackets,   type = type,   x = (x / 2) + match(type, names(bracket_list)) - 0.25 )  # Plotting brackets ggplot(brackets, aes(y, x, group = type)) +   geom_line() +   scale_y_continuous(     breaks = seq_along(bracket_list),     labels = names(bracket_list)   ) +   theme(panel.grid.major = element_blank()) zigzag <- seq(0, 1, length.out = 10) zigzag <- cbind(x = seq_along(zigzag) %% 2, y = zigzag)  econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(start = start, end = end, name = name),     bracket = zigzag,     bracket_size = unit(1, \"mm\")   ))"},{"path":"https://teunbrand.github.io/gguidance/articles/axes.html","id":"theming","dir":"Articles","previous_headings":"Nested axes > Styling","what":"Theming","title":"Axes","text":"styling brackets inherit relevant axis.ticks.{x/y}.{position} theme element. styling text inherit relevant axis.text.{x/y}.{position} theme element. style elements separately parent, can use bracket_theme deep_text arguments.  Moreover, can provide list elements deep_text bracket_theme style elements per-level basis even greater control. Worth mentioning: hjust parameter text relative range occupies.","code":"econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(start = start, end = end, name = name),     deep_text     = element_text(colour = \"red\"),     bracket_theme = element_line(linetype = \"dotted\")   )) econ +   guides(x = guide_axis_nested(     range_data    = presidential,     range_mapping = aes(start = start, end = end, name = name),     deep_text     = list(element_text(colour = \"red\", hjust = 0),  # 1st level                          element_text(face = \"bold\",  hjust = 1)), # 2nd level     bracket_theme = list(element_line(linetype = \"dotted\"), # 1st level                          element_line(linewidth = 1))       # 2nd level   ))"},{"path":"https://teunbrand.github.io/gguidance/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teun van den Brand. Author, maintainer.","code":""},{"path":"https://teunbrand.github.io/gguidance/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van den Brand T (2023). gguidance: Extended guide options 'ggplot2'. R package version 0.0.0.9000, https://teunbrand.github.io/gguidance/.","code":"@Manual{,   title = {gguidance: Extended guide options for 'ggplot2'},   author = {Teun {van den Brand}},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://teunbrand.github.io/gguidance/}, }"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"gguidance-","dir":"","previous_headings":"","what":"Extended guide options for ggplot2","title":"Extended guide options for ggplot2","text":"Warning ’re looking experimental branch explores guide extensions upcoming ggproto overhaul ggplot2. goal gguidance provide additional guides ggplot2 ecosystem. Please note repo still worked , probably usable, isn’t finished.","code":""},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extended guide options for ggplot2","text":"can install development version gguidance GitHub :","code":"# install.package(\"pak\") pak::pak(\"tidyverse/ggplot2\") # Installs development version of ggplot2 pak::pak(\"teunbrand/gguidance@main\") # Installs this package"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Extended guide options for ggplot2","text":"table contents package’s utilities: Cross legend String legend Capped colour bar Violin colour bar Histogram colour bar Subtitles Minor ticks Capping Ranges Table Regular Plus Zebra","code":""},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Extended guide options for ggplot2","text":"Let’s first set basic plot experiment ","code":"library(gguidance) #> Loading required package: ggplot2  p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   labs(     x = \"Engine displacement\",     y = \"Highway miles per gallon\"   ) +   theme(axis.line = element_line())"},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"cross-legend","dir":"","previous_headings":"Examples > Legends","what":"Cross legend","title":"Extended guide options for ggplot2","text":"‘cross legend’ can show two variables single legend.","code":"p + aes(colour = paste(cyl, year)) +   guides(colour = \"legend_cross\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"string-legend","dir":"","previous_headings":"Examples > Legends","what":"String legend","title":"Extended guide options for ggplot2","text":"string legend doesn’t display keys, colours labels.","code":"p + aes(colour = class) +   guides(colour = \"legend_string\")"},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"capped-colour-bar","dir":"","previous_headings":"Examples > Colour bars","what":"Capped colour bar","title":"Extended guide options for ggplot2","text":"capped colour bar:","code":"p + aes(colour = cty) +   scale_colour_viridis_c(guide = \"colourbar_cap\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"violin-colour-bar","dir":"","previous_headings":"Examples > Colour bars","what":"Violin colour bar","title":"Extended guide options for ggplot2","text":"Using violin colour guide:","code":"p + aes(colour = cty) +   scale_colour_viridis_c(guide = guide_colour_violin(density = mpg$cty))"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"histogram-colour-bar","dir":"","previous_headings":"Examples > Colour bars","what":"Histogram colour bar","title":"Extended guide options for ggplot2","text":"Using histogram colour guide:","code":"p + aes(colour = cty) +   scale_colour_viridis_c(     guide = guide_colour_histogram(hist = hist(mpg$cty, breaks = 10))   )"},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"subtitles","dir":"","previous_headings":"Examples > Axes","what":"Subtitles","title":"Extended guide options for ggplot2","text":"Using subtitles.","code":"p + guides(x = guide_axis_extend(subtitle = c(\"Less\", \"More\")))"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"minor-ticks","dir":"","previous_headings":"Examples > Axes","what":"Minor ticks","title":"Extended guide options for ggplot2","text":"Using minor ticks.","code":"p + guides(x = \"axis_minor\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"capping","dir":"","previous_headings":"Examples > Axes","what":"Capping","title":"Extended guide options for ggplot2","text":"Using capped lines.","code":"p + guides(x = \"axis_cap\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"ranges","dir":"","previous_headings":"Examples > Axes","what":"Ranges","title":"Extended guide options for ggplot2","text":"bracketed ranges.","code":"boxplot <- ggplot(mpg, aes(class, displ)) +   geom_boxplot() +   labs(     x = \"Type of car\",     y = \"Engine displacement\"   )  boxplot +   guides(x = guide_axis_nested(     range_start = c(0.5, 3.5),     range_end   = c(4.5, 6.5),     range_name  = c(\"First range\", \"Second range\"),     bracket     = \"square\"    ))"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"table","dir":"","previous_headings":"Examples > Axes","what":"Table","title":"Extended guide options for ggplot2","text":"Using table axis guide.","code":"# Creating summary table my_table <- lapply(split(mpg[, c(\"displ\", \"cty\", \"hwy\")], mpg$class), colMeans) my_table <- as.data.frame(do.call(rbind, my_table)) my_table[] <- lapply(my_table, scales::number, accuracy = 0.01) my_table$class <- rownames(my_table)  # Use summary table as axis guide boxplot +   guides(x = guide_axis_table(table = my_table, key_col = class))"},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"regular","dir":"","previous_headings":"Examples > Grids","what":"Regular","title":"Extended guide options for ggplot2","text":"Like vanilla panel grid, options breaks appear. , categories.","code":"boxplot +   coord_guided(guide_grid(x_breaks = breaks_between()))"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"plus","dir":"","previous_headings":"Examples > Grids","what":"Plus","title":"Extended guide options for ggplot2","text":"Subtler grid lines drawing intersections, making ‘plus’ symbol.","code":"p + coord_guided(\"grid_plus\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"zebra","dir":"","previous_headings":"Examples > Grids","what":"Zebra","title":"Extended guide options for ggplot2","text":"Alternating stripes breaks.","code":"boxplot + coord_guided(\"grid_zebra\") +   theme(panel.grid.major.x = element_line(alpha(\"grey50\", 0.1)))"},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Bracket options — bracket_options","title":"Bracket options — bracket_options","text":"functions construct various sorts brackets. construct matrix can supplied bracket argument guide_axis_nested().","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bracket options — bracket_options","text":"","code":"bracket_sigmoid(curvature = 10, n = 100)  bracket_atan(curvature = 5, n = 100)  bracket_curvy(angle = 225, n = 100)  bracket_line()  bracket_round(angle = 180, n = 100)  bracket_chevron()  bracket_square()"},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bracket options — bracket_options","text":"curvature numeric(1) controls curliness bracket. precisely, used construct sequence seq(-curvature, curvature, length.= n) logistic arctangent functions evaluated. n integer(1) number points use bracket. angle numeric(1): angle degrees circle piece drawn. bracket_curvy(), angle 180 270.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bracket options — bracket_options","text":"<matrix[n, 2]> coordinates points brackets.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Bracket options — bracket_options","text":"bracket_sigmoid(): Two sigmoid curves stacked top one another form bracket. bracket_atan(): Two arctangent curves stacked top one another form bracket. bracket_curvy(): Four circular arcs make bracket. bracket_line(): simple line bracket. n = 2 points. bracket_round(): One circular arc makes bracket. bracket_chevron(): chevron (V-shape) makes bracket. n = 3 points. bracket_square(): square bracket. n = 4 points.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bracket options — bracket_options","text":"","code":"plot(bracket_sigmoid(), type = 'l')"},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks between discrete categories — breaks_between","title":"Breaks between discrete categories — breaks_between","text":"function factory returns function placing breaks discrete categories use grid guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks between discrete categories — breaks_between","text":"","code":"breaks_between(extremes = TRUE)"},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks between discrete categories — breaks_between","text":"extremes logical(1) whether breaks placed first last category. TRUE, returned. FALSE, omitted.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breaks between discrete categories — breaks_between","text":"function can passed grid guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Breaks between discrete categories — breaks_between","text":"function used scale_{aes}_{type}(breaks = ...) input.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/breaks_between.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks between discrete categories — breaks_between","text":"","code":"# By default, before and after breaks are included breaks_between()(c(\"A\", \"B\", \"C\")) #> [1] 0.5 1.5 2.5 3.5  # Only between categories breaks_between(FALSE)(c(\"A\", \"B\", \"C\")) #> [1] 1.5 2.5  # Continuous input returns waiver breaks_between()(1:3) #> list() #> attr(,\"class\") #> [1] \"waiver\""},{"path":"https://teunbrand.github.io/gguidance/reference/coord_guided.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian coordinates with grid guides. — coord_guided","title":"Cartesian coordinates with grid guides. — coord_guided","text":"coordinate system offers additional flexibility able set guide panel grid.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/coord_guided.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian coordinates with grid guides. — coord_guided","text":"","code":"coord_guided(   guide = NULL,   xlim = NULL,   ylim = NULL,   ratio = NULL,   expand = TRUE,   clip = \"on\",   default = FALSE )"},{"path":"https://teunbrand.github.io/gguidance/reference/coord_guided.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian coordinates with grid guides. — coord_guided","text":"guide <GuideGrid> object giving guide draw grid . Can constructed using functions listed 'See Also' section. xlim, ylim Limits x y axes. ratio Either NULL (default) numeric(1). numeric(1), locks aspect ratio panels, expressed y / x. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim. clip drawing clipped extent plot panel? setting \"\" (default) means yes, setting \"\" means . cases, default \"\" changed, setting clip = \"\" can cause unexpected results. allows drawing data points anywhere plot, including plot margins. limits set via xlim ylim data points fall outside limits, data points may show places axes, legend, plot title, plot margins. default default coordinate system? FALSE (default), replacing coordinate system another one creates message alerting user coordinate system replaced. TRUE, warning suppressed.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/coord_guided.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartesian coordinates with grid guides. — coord_guided","text":"<Coord> ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/coord_guided.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian coordinates with grid guides. — coord_guided","text":"","code":"# Either choose a guide by name... ggplot(mpg, aes(displ, hwy)) +   geom_point() +   coord_guided(guide = \"grid_zebra\")   # ... or using a constructor ggplot(mpg, aes(displ, hwy)) +   geom_point() +   coord_guided(guide = guide_grid_zebra())"},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":null,"dir":"Reference","previous_headings":"","what":"List of theme elements — elements_text","title":"List of theme elements — elements_text","text":"convenience function constructing list text theme elements. can take vector input arguments pass ith value vector ith call function.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of theme elements — elements_text","text":"","code":"elements_text(   family = NULL,   face = NULL,   colour = NULL,   size = NULL,   hjust = NULL,   vjust = NULL,   angle = NULL,   lineheight = NULL,   color = NULL,   margin = NULL,   debug = NULL,   inherit.blank = FALSE )"},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of theme elements — elements_text","text":"family Font family face Font face (\"plain\", \"italic\", \"bold\", \"bold.italic\") colour, color Line/border colour. Color alias colour. size text size pts. hjust Horizontal justification (\\([0, 1]\\)) vjust Vertical justification (\\([0, 1]\\)) angle Angle (\\([0, 360]\\)) lineheight Line height margin Margins around text. See margin() details. creating theme, margins placed side text facing towards center plot. debug TRUE, aids visual debugging drawing solid rectangle behind complete text area, point label anchored. inherit.blank element inherit existence element_blank among parents? TRUE existence blank element among parents cause element blank well. FALSE blank parent element ignored calculating final element state.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of theme elements — elements_text","text":"list <element_text> objects.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of theme elements — elements_text","text":"NA NULL values silently dropped. want pass transparent colour argument, recommended use \"transparent\" instead. dropping NAs serve purpose can skip providing argument text element positions NAs occur.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/elements_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of theme elements — elements_text","text":"","code":"# Simply have different colours for text elements_text(colour = c(\"blue\", \"red\")) #> [[1]] #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : chr \"blue\" #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #> [[2]] #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : chr \"red\" #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>   # More complicated case elements_text(   # 2nd text will *not* have a family set   family = c(\"mono\", NA, \"sans\"),   # Arguments that don't take scalars can take lists.   margin = list(NULL, margin(t = 5)) ) #> [[1]] #> List of 11 #>  $ family       : chr \"mono\" #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #> [[2]] #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : 'margin' num [1:4] 5points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #> [[3]] #> List of 11 #>  $ family       : chr \"sans\" #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : NULL #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>"},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","title":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","text":"'ggplot2' extension focusses expanding plotter's arsenal guides, axes, legends colour bars. brings various improvements existing guides re-implementation, well adding novel guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","text":"Maintainer: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"ggproto objects in gguidance — CoordGuided","title":"ggproto objects in gguidance — CoordGuided","text":"gguidance package relies extension system ggplot2 ggproto class objects, allow cross-package inheritance objects geoms, stats, facets, scales coordinate systems. purpose making plots, users invited wholly ignore objects, since interacting objects preferred various constructor functions. gguidance package introduces new <Guide> ggproto class support variations axes, legends colourbars.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_cap.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis guide with capped axis line — guide_axis_cap","title":"Axis guide with capped axis line — guide_axis_cap","text":"similar regular axis guide, addition axis line can capped default, axis line capped extreme breaks, options available.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_cap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis guide with capped axis line — guide_axis_cap","text":"","code":"guide_axis_cap(cap_lower = min, cap_upper = max, ...)"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_cap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis guide with capped axis line — guide_axis_cap","text":"cap_lower, cap_upper way set lower upper ranges axis capping Can one following: NULL perform axis capping. function takes break positions input returns lower upper boundary. Note also discrete scales, inputs mapped breaks, numeric. function input can also given lambda syntax. numeric value, data units, lower upper boundaries. <unit> object set boundaries independent data. ... Arguments passed guide_axis_extend subtitle character() expression() giving subtitle guide. NULL (default), subtitle shown. length(subtitle) > 1, text distributed axis hjust setting ignored. subtitle.theme <element_text> object <element_blank> object controlling appearance subtitle argument. default, inherits relevant axis.text.{x/y}.{position} theme setting. colour,color character(1) valid colour simultaneously changing colour axis text, axis ticks axis line. NULL (default), inherit colours directly theme. Otherwise, theme settings overruled. minor_size numeric(1) giving relative size minor axis ticks relative major axis ticks, defined axis.ticks.length.{x/y}.{position} theme element. NULL (default), minor axis ticks shown. major_size numeric(1) giving relative size major ticks relative axis.ticks.length.{x/y}.{position} theme element. NULL (default), major ticks drawn theme's length. title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order positive integer length 1 specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined secret algorithm. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_cap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis guide with capped axis line — guide_axis_cap","text":"<Guide> ggproto object can given guides() function, set guide argument position scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_cap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis guide with capped axis line — guide_axis_cap","text":"","code":"# A basic plot with axis lines p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme(axis.line = element_line())  # By default, axis lines are truncated to extreme breaks p + guides(x = \"axis_cap\")   # Turn off truncation at only one end p + guides(x = guide_axis_cap(cap_upper = NULL))   # Truncated at specific data values p + guides(x = guide_axis_cap(cap_lower = 3, cap_upper = 6))   # Truncated at some distance p + guides(x = guide_axis_cap(   cap_lower = unit(3, \"cm\"),   cap_upper = unit(1, \"npc\") - unit(3, \"cm\") ))   # Truncation with functions take existing breaks as input p + guides(x = guide_axis_cap(   cap_lower = function(x) x - 0.3,   cap_upper = ~ .x + 0.3 # rlang lambda syntax function ))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_extend.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended axis guide — guide_axis_extend","title":"Extended axis guide — guide_axis_extend","text":"Like regular axis guides, extended axis guide visual representation position scales. offers various additional options axis capping, display minor ticks, subtitles convenient recolouring.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_extend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended axis guide — guide_axis_extend","text":"","code":"guide_axis_extend(   title = waiver(),   subtitle = NULL,   subtitle.theme = element_text(),   cap_lower = NULL,   cap_upper = NULL,   colour = NULL,   color = NULL,   major_size = NULL,   minor_size = NULL,   check.overlap = FALSE,   angle = NULL,   n.dodge = 1,   order = 0,   position = waiver(),   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_extend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extended axis guide — guide_axis_extend","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. subtitle character() expression() giving subtitle guide. NULL (default), subtitle shown. length(subtitle) > 1, text distributed axis hjust setting ignored. subtitle.theme <element_text> object <element_blank> object controlling appearance subtitle argument. default, inherits relevant axis.text.{x/y}.{position} theme setting. cap_lower, cap_upper way set lower upper ranges axis capping Can one following: NULL perform axis capping. function takes break positions input returns lower upper boundary. Note also discrete scales, inputs mapped breaks, numeric. function input can also given lambda syntax. numeric value, data units, lower upper boundaries. <unit> object set boundaries independent data. colour, color character(1) valid colour simultaneously changing colour axis text, axis ticks axis line. NULL (default), inherit colours directly theme. Otherwise, theme settings overruled. major_size numeric(1) giving relative size major ticks relative axis.ticks.length.{x/y}.{position} theme element. NULL (default), major ticks drawn theme's length. minor_size numeric(1) giving relative size minor axis ticks relative major axis ticks, defined axis.ticks.length.{x/y}.{position} theme element. NULL (default), minor axis ticks shown. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order positive integer length 1 specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined secret algorithm. position guide drawn: one top, bottom, left, right. ... Currently used.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_extend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extended axis guide — guide_axis_extend","text":"<Guide> ggproto object can given guides() function, set guide argument position scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_extend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extended axis guide — guide_axis_extend","text":"","code":"# For examples with minor ticks or capping, please see: # ?guide_axis_minor # ?guide_axis_cap  # A basic plot with an axis line p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme(axis.line.x = element_line())  # Recolouring whole axis at once p + guides(x = guide_axis_extend(colour = \"red\"))   # Adding a subtitle p + guides(x = guide_axis_extend(subtitle = \"Engine Displacement (L)\"))   # Controlling subtitle appearance p + guides(x = guide_axis_extend(   title = \"Engine Displacement\",   subtitle = \"Litres\",   subtitle.theme = element_text(face = \"italic\", hjust = 1) ))   # Multiple subtitles are distributed over the axis p + guides(x = guide_axis_extend(   subtitle = c(\"Less\", \"Middle\", \"More\") ))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_minor.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis guide with ticks for minor breaks — guide_axis_minor","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"similar regular axis guide, addition also places tick marks minor break locations. minor_breaks argument scale_{x/y}_continuous() controls breaks placed.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_minor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"","code":"guide_axis_minor(minor_size = 0.75, major_size = 1, ...)"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_minor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"minor_size numeric(1) giving relative size minor axis ticks relative major axis ticks, defined axis.ticks.length.{x/y}.{position} theme element. NULL (default), minor axis ticks shown. major_size numeric(1) giving relative size major ticks relative axis.ticks.length.{x/y}.{position} theme element. NULL (default), major ticks drawn theme's length. ... Arguments passed guide_axis_extend subtitle character() expression() giving subtitle guide. NULL (default), subtitle shown. length(subtitle) > 1, text distributed axis hjust setting ignored. subtitle.theme <element_text> object <element_blank> object controlling appearance subtitle argument. default, inherits relevant axis.text.{x/y}.{position} theme setting. cap_lower,cap_upper way set lower upper ranges axis capping Can one following: NULL perform axis capping. function takes break positions input returns lower upper boundary. Note also discrete scales, inputs mapped breaks, numeric. function input can also given lambda syntax. numeric value, data units, lower upper boundaries. <unit> object set boundaries independent data. colour,color character(1) valid colour simultaneously changing colour axis text, axis ticks axis line. NULL (default), inherit colours directly theme. Otherwise, theme settings overruled. title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order positive integer length 1 specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined secret algorithm. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_minor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"<Guide> ggproto object can given guides() function, set guide argument position scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_minor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis guide with ticks for minor breaks — guide_axis_minor","text":"","code":"# A basic plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Show minor ticks p + guides(x = \"axis_minor\")   # Controlling tick size relative to normal ticks p + guides(x = guide_axis_minor(minor_size = 2))   # Only show minor ticks p + guides(x = guide_axis_minor(minor_size = 1, major_size = 0))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Nested axis guide — guide_axis_nested","title":"Nested axis guide — guide_axis_nested","text":"Like regular axis guides, guide visual representation position scales. addition, axis guide extra options visualise various ranges scale.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nested axis guide — guide_axis_nested","text":"","code":"guide_axis_nested(   range_data = NULL,   range_mapping = NULL,   range_start = NULL,   range_end = NULL,   range_name = NULL,   range_level = NULL,   sep = \"[^[:alnum:]]+\",   bracket = \"line\",   bracket_size = unit(2, \"mm\"),   bracket_theme = element_line(),   deep_text = element_text(),   handle_oob = \"squish\",   mirror_margin = TRUE,   extend_discrete = 0.4,   drop_zero = TRUE,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nested axis guide — guide_axis_nested","text":"range_data optional data.frame containing relevant data ranges. range_mapping optional call aes() mappings start, end, name /level range_data argument. range_start, range_end Optional vectors giving starts ends ranges. Overrules start end aesthetic set range_mapping. range_name optional character vector giving labels use ranges. Overrules name mapping set range_mapping. range_level optional integer vector indicating depth range displayed. mostly useful overruling default bracket dodging. Overrules level mapping set range_mapping. sep character(1) acts 'regex' pattern split strings different layers. string splitting performed range_* arguments supplied. bracket One following: <matrix[n, 2]> giving point coordinates bracket shapes, returned bracket functions. character(1) giving one bracket functions string. current options \"sigmoid\", \"atan\", \"curvy\", \"line\" (default), \"round\", \"chevron\" \"square\". bracket_size <unit> sets size bracket direction orthogonal axis. bracket_theme <element_line> object <element_blank> object controlling appearance brackets. default, inherits axis.ticks.{x/y}.{position} theme setting. deep_text <element_text> object <element_blank> object. Alternatively, list elements, every item applies layer text regular labels. See also elements_text() easily construct list text elements. handle_oob character(1) describing deal --bounds (oob) ranges. default \"squish\" deletes ranges start endpoints side limits, squeezes remainers fit inside limits. \"censor\" delete ranges part outside limits. \"none\" retain ranges regardless limits. mirror_margin logical(1) TRUE (default), mirror margin field axis.text.{x/y}.{position} theme setting. FALSE, margins taken -. option default margins may sometimes 0 text bracket, may look uncomfortable. extend_discrete numeric(1) giving much brackets extended beyond tick mark discrete scales. less 0.5 adjacent ranges touch. drop_zero logical(1) determining whether ranges difference, tolerance, start end point drawn. TRUE (default), ranges get brackets, FALSE, ranges get brackets. Useful set FALSE brackets drawn single breaks discrete scales. Note extend_discrete bearing drop_zero. ... Arguments passed guide_axis_extend subtitle character() expression() giving subtitle guide. NULL (default), subtitle shown. length(subtitle) > 1, text distributed axis hjust setting ignored. subtitle.theme <element_text> object <element_blank> object controlling appearance subtitle argument. default, inherits relevant axis.text.{x/y}.{position} theme setting. cap_lower,cap_upper way set lower upper ranges axis capping Can one following: NULL perform axis capping. function takes break positions input returns lower upper boundary. Note also discrete scales, inputs mapped breaks, numeric. function input can also given lambda syntax. numeric value, data units, lower upper boundaries. <unit> object set boundaries independent data. colour,color character(1) valid colour simultaneously changing colour axis text, axis ticks axis line. NULL (default), inherit colours directly theme. Otherwise, theme settings overruled. minor_size numeric(1) giving relative size minor axis ticks relative major axis ticks, defined axis.ticks.length.{x/y}.{position} theme element. NULL (default), minor axis ticks shown. major_size numeric(1) giving relative size major ticks relative axis.ticks.length.{x/y}.{position} theme element. NULL (default), major ticks drawn theme's length. title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. check.overlap silently remove overlapping labels, (recursively) prioritizing first, last, middle labels. angle Compared setting angle theme() / element_text(), also uses heuristics automatically pick hjust vjust probably want. n.dodge number rows (vertical axes) columns (horizontal axes) used render labels. useful displaying labels otherwise overlap. order positive integer length 1 specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined secret algorithm. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nested axis guide — guide_axis_nested","text":"<Guide> ggproto object can given guides() function, set guide argument position scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nested axis guide — guide_axis_nested","text":"","code":"# A standard plot p <- ggplot(mpg, aes(class, displ)) +   geom_boxplot()  # If no `range_*` argument is given, the guide tries to split the labels p + aes(x = interaction(cyl, year)) +   guides(x = \"axis_nested\")   # For discrete axes, you can select the ranges either by numerical # equivalent, or by break level. p + guides(x = guide_axis_nested(   range_start = c(\"2seater\", \"pickup\"),   range_end   = c(4, 7),   range_name  = c(\"First range\", \"Second range\") ))   # If ranges overlap, they are automatically dodged. You can override this # by setting the `range_level` argument. p + guides(x = guide_axis_nested(   range_start = c(1, 3),   range_end   = c(4, 6),   range_name  = c(\"First range\", \"Second range\") ))   # You can change the appearance of the brackets. See ?bracket_options for # ready-to-go bracket functions. p + aes(x = interaction(cyl, year)) +   guides(x = guide_axis_nested(     bracket       = \"curvy\",     bracket_size  = unit(5, \"mm\"),     bracket_theme = element_line(colour = \"forestgreen\"),     deep_text     = element_text(colour = \"tomato\")   ))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table as axis guide — guide_axis_table","title":"Table as axis guide — guide_axis_table","text":"Unlike regular axis, axis guide formats table aligned break positions scale. Axis tables along x-axis transposed.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table as axis guide — guide_axis_table","text":"","code":"guide_axis_table(   table = NULL,   key_col = NULL,   colnames = NULL,   colnames_theme = element_text(inherit.blank = TRUE),   colnames_position = c(\"top\", \"left\"),   cell_text_theme = element_text(inherit.blank = TRUE),   cell_padding = 0.25,   cell_just = 0.5,   sep_cell_rows = element_line(inherit.blank = TRUE),   sep_cell_cols = element_line(inherit.blank = TRUE),   sep_borders = element_line(inherit.blank = TRUE),   sep_title = element_line(inherit.blank = TRUE),   shade_odd = element_rect(inherit.blank = TRUE),   shade_even = element_rect(inherit.blank = TRUE),   shade_title = element_blank(),   uniform_size = FALSE,   align_panel = TRUE,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table as axis guide — guide_axis_table","text":"table data.frame key_col expression describing column table argument lined scale's labels. colnames character vector equal length ncol(table) setting titles columns. Can used set syntactically invalid, nicely formatted, names. colnames_theme <element_text> (default) <element_blank> object controlling appearance text title cells. inherit axis.label.{x/y}.{position} setting plot's theme. colnames_position placement title cells. guide horizontal, can \"left\" \"right\". guide vertical, can \"top\" \"bottom\". cell_text_theme <element_text> (default) <element_blank> object controlling appearance text regular cells. inherits axis.label.{x/y}.{position} setting plot's theme. cell_padding numeric(1) unit() length 1, indicating much text padded. setting numeric(1), padding size relative cell_text_theme's font size. cell_just numeric(1) 0 1, setting justification cells relative break positions scale. sep_cell_rows, sep_cell_cols <element_line> (default) <element_blank> object controlling appearance lines separate regular cells interior table. Note rows cols refer rows columns table argument respectively. refer becomes row column final, possibly transposed, table. inherits panel.grid.major.{x/y} setting plot's theme. sep_borders <element_line> (default) <element_blank> object controlling appearance lines separate outer regular cells plot exterior. inherits panel.grid.major.{x/y} setting plot's theme. sep_title <element_line> (default) <element_blank> object controlling appearance lines separate regular cells title cells. inherits axis.line.{x/y}.{position} setting plot's theme. shade_odd, shade_even <element_rect> (default) <element_blank> object controlling appearance background fills 1-cell high, horizontal lines table. respectively inherit panel.background plot.background settings plot's theme. shade_title <element_rect> <element_blank> (default) object controlling appearance background fills title cells. uniform_size logical(1) TRUE, makes cells size direction orthogonal axis. align_panel logical(1) TRUE (default), aligns first last cells plotting panel. FALSE, first last cells size two breaks, usual. ... Currently use.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table as axis guide — guide_axis_table","text":"<Guide> ggproto object can given guides() function, set guide argument position scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Table as axis guide — guide_axis_table","text":"Currently, alignment text cell_just != 0.5 panel_align = TRUE slightly .","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table as axis guide — guide_axis_table","text":"","code":"# Creating summary table tbl <- lapply(split(mpg[, c(\"displ\", \"cty\", \"hwy\")], mpg$cyl), colMeans) tbl <- as.data.frame(do.call(rbind, tbl)) tbl[] <- lapply(tbl, scales::number, accuracy = 0.01) tbl$cyl <- rownames(tbl)  # A basic plot p <- ggplot(mpg, aes(factor(cyl), displ)) +   geom_jitter()  # Adding the table p + guides(   x = guide_axis_table(     table = tbl, key_col = cyl   ) )   # Cell text can be formatted seperately faces   <- c(\"bold\", rep(\"plain\", ncol(tbl) - 1)) colours <- c(\"red\",  rep(\"black\", ncol(tbl) - 1)) p + guides(   x = guide_axis_table(     table = tbl, key_col = cyl,     # Highlight specific variable. In this case, the 'displ' we put on y-axis     cell_text_theme = elements_text(face = faces, colour = colours)   ) )   # Titles can easily become too long, and can't be automatically adjusted p <- p + guides(   x = guide_axis_table(     table = tbl, key_col = cyl,     colnames = c(\"Mean displ\", \"Mean cty\", \"Mean hwy\", \"Cylinders\")   ) ) p   # This can be remedied by setting the plot margins appropriately p + theme(plot.margin = margin(l = 32))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram colour guide — guide_colour_histogram","title":"Histogram colour guide — guide_colour_histogram","text":"Like regular colour bar guides, histogram guide also shows continuous colour scales mapped values. addition, width guide can vary","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram colour guide — guide_colour_histogram","text":"","code":"guide_colour_histogram(   hist = list(),   just = 0,   ticks = element_line(\"grey80\"),   ticks.length = unit(c(0, 1), \"npc\"),   ticks.ontop = FALSE,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram colour guide — guide_colour_histogram","text":"hist One following: named list breaks counts elements, one returned hist() function. breaks element one longer counts element. numeric vecotr, forwarded hist() function plot = FALSE argument set. just numeric(1) [0, 1] range determine alignment histogram. valueo f 0 (default) sets left- bottom-alignment, whereas value 1 sets right- top-alignment. value 0.5 aligns histogram middle. ticks theme object rendering tick marks colourbar. Usually, object element_line() expected (default). element_blank(), tick marks drawn. backward compatibility, can also logical translates TRUE element_line() FALSE element_blank(). ticks.length numeric grid::unit() object specifying length tick marks colourbar. ticks.ontop logical(1) whether draw ticks top histogram (TRUE) underneath histogram (FALSE, default). ... Arguments passed ggplot2::guide_colourbar title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label logical. TRUE labels drawn. FALSE labels invisible. label.position character string indicating position label. One \"top\", \"bottom\" (default horizontal guide), \"left\", \"right\" (default vertical guide). label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). label.hjust numeric specifying horizontal justification label text. default standard text 0 (left-aligned) 1 (right-aligned) expressions. label.vjust numeric specifying vertical justification label text. barwidth numeric grid::unit() object specifying width colourbar. Default value legend.key.width legend.key.size theme() theme. barheight numeric grid::unit() object specifying height colourbar. Default value legend.key.height legend.key.size theme() theme. nbin numeric specifying number bins drawing colourbar. smoother colourbar results larger value. raster logical. TRUE colourbar rendered raster object. FALSE colourbar rendered set rectangles. Note graphics devices capable rendering raster image. frame theme object rendering frame drawn around bar. Usually, object element_rect() expected. element_blank() (default), frame drawn. frame.colour string specifying colour frame drawn around bar. backward compatibility, argument NULL, frame argument set element_rect(). frame.linewidth numeric specifying width frame drawn around bar millimetres. frame.linetype numeric specifying linetype frame drawn around bar. ticks.colour string specifying colour tick marks. ticks.linewidth numeric specifying width tick marks millimetres. draw.ulim logical specifying upper limit tick marks visible. draw.llim logical specifying lower limit tick marks visible. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating grid::unit() barwidth barheight. reverse logical. TRUE colourbar reversed. default, highest value top lowest value bottom order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. available_aes vector character strings listing aesthetics colourbar can drawn.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram colour guide — guide_colour_histogram","text":"<Guide> ggproto object can given guides() function, set guide argument colour fill scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram colour guide — guide_colour_histogram","text":"","code":"# A standard plot with a continuous colour scale p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty)) +   scale_colour_viridis_c()  # The guide can be given a variable of which to calculate a histogram p + guides(colour = guide_colour_histogram(mpg$cty))   # You can also pass the result of `hist()` for greater control p + guides(colour = guide_colour_histogram(hist(mpg$cty, breaks = 10)))   # Alternatively, you can also pass a list manually p + guides(colour = guide_colour_histogram(   hist = list(breaks = 0:4 * 10, counts = 1:4) ))   # The `just` argument can be used to align the histogram elsewhere p + guides(colour = guide_colour_histogram(mpg$cty, just = 1))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_violin.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin colour guide — guide_colour_violin","title":"Violin colour guide — guide_colour_violin","text":"Like regular colour bar guides, violin guide also shows continuous colour scales mapped values. addition, width guide can vary. varying width can used display densities like violin plot.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_violin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin colour guide — guide_colour_violin","text":"","code":"guide_colour_violin(   density = list(),   just = 0.5,   ticks = element_line(\"grey80\"),   ticks.length = unit(c(0, 1), \"npc\"),   ticks.ontop = FALSE,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_violin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin colour guide — guide_colour_violin","text":"density One following: named list x y elements, one returned density() function. x y elements equal length least length 2. Infinite values x set scale's limits. numeric vector, forwarded density() function default arguments. just numeric(1) [0, 1] range determine alignment violin. value 0 sets left- bottom-alignment, whereas value 1 sets right- top-alignment. value 0.5 (default) aligns violin middle. ticks theme object rendering tick marks colourbar. Usually, object element_line() expected (default). element_blank(), tick marks drawn. backward compatibility, can also logical translates TRUE element_line() FALSE element_blank(). ticks.length numeric grid::unit() object specifying length tick marks colourbar. ticks.ontop logical(1) whether draw ticks op top violin (TRUE) underneath violin (FALSE, default). ... Arguments passed ggplot2::guide_colourbar title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label logical. TRUE labels drawn. FALSE labels invisible. label.position character string indicating position label. One \"top\", \"bottom\" (default horizontal guide), \"left\", \"right\" (default vertical guide). label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). label.hjust numeric specifying horizontal justification label text. default standard text 0 (left-aligned) 1 (right-aligned) expressions. label.vjust numeric specifying vertical justification label text. barwidth numeric grid::unit() object specifying width colourbar. Default value legend.key.width legend.key.size theme() theme. barheight numeric grid::unit() object specifying height colourbar. Default value legend.key.height legend.key.size theme() theme. nbin numeric specifying number bins drawing colourbar. smoother colourbar results larger value. raster logical. TRUE colourbar rendered raster object. FALSE colourbar rendered set rectangles. Note graphics devices capable rendering raster image. frame theme object rendering frame drawn around bar. Usually, object element_rect() expected. element_blank() (default), frame drawn. frame.colour string specifying colour frame drawn around bar. backward compatibility, argument NULL, frame argument set element_rect(). frame.linewidth numeric specifying width frame drawn around bar millimetres. frame.linetype numeric specifying linetype frame drawn around bar. ticks.colour string specifying colour tick marks. ticks.linewidth numeric specifying width tick marks millimetres. draw.ulim logical specifying upper limit tick marks visible. draw.llim logical specifying lower limit tick marks visible. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating grid::unit() barwidth barheight. reverse logical. TRUE colourbar reversed. default, highest value top lowest value bottom order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. available_aes vector character strings listing aesthetics colourbar can drawn.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_violin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Violin colour guide — guide_colour_violin","text":"<Guide> ggproto object can given guides() function, set guide argument colour fill scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colour_violin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Violin colour guide — guide_colour_violin","text":"","code":"# A standard plot with continuous colour scale p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty)) +   scale_colour_viridis_c()  # The guide can be given a variable of which to calculate density p + guides(colour = guide_colour_violin(mpg$cty))   # You can also pass the result of `density()` for greater control p + guides(colour = guide_colour_violin(density(mpg$cty, adjust = 0.5)))   # Alternatively, you can also pass a list manually p + guides(   colour = guide_colour_violin(density = list(x = c(-Inf, Inf), y = c(0, 1))) )   # The `just` argument can be used to align the density elsewhere p + guides(colour = guide_colour_violin(mpg$cty, just = 0))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_cap.html","id":null,"dir":"Reference","previous_headings":"","what":"Capped colour bar guide — guide_colourbar_cap","title":"Capped colour bar guide — guide_colourbar_cap","text":"Like regular colour bar guides, capped colour bar guide also shows continuous colour scales mapped values. addition, guide allows 'cap' ends colour bar, can serve visual indicators scale squishing. cap filled colours extremes.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_cap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capped colour bar guide — guide_colourbar_cap","text":"","code":"guide_colourbar_cap(   cap_shape = \"triangle\",   cap_size = NULL,   cap_position = \"both\",   ... )  guide_colorbar_cap(   cap_shape = \"triangle\",   cap_size = NULL,   cap_position = \"both\",   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_cap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capped colour bar guide — guide_colourbar_cap","text":"cap_shape character(1) indicating shape cap. Can one \"triangle\" (default), \"round\" \"arched\". cap_size <unit> object setting size cap. NULL (default), appropriate size chosen according cap_shape bar{width/height} argument. cap_position character(1) indicating end colour bar display cap(s). Can one \"lower\", \"upper\" \"\". ... Arguments passed ggplot2::guide_colourbar title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label logical. TRUE labels drawn. FALSE labels invisible. label.position character string indicating position label. One \"top\", \"bottom\" (default horizontal guide), \"left\", \"right\" (default vertical guide). label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). label.hjust numeric specifying horizontal justification label text. default standard text 0 (left-aligned) 1 (right-aligned) expressions. label.vjust numeric specifying vertical justification label text. barwidth numeric grid::unit() object specifying width colourbar. Default value legend.key.width legend.key.size theme() theme. barheight numeric grid::unit() object specifying height colourbar. Default value legend.key.height legend.key.size theme() theme. nbin numeric specifying number bins drawing colourbar. smoother colourbar results larger value. raster logical. TRUE colourbar rendered raster object. FALSE colourbar rendered set rectangles. Note graphics devices capable rendering raster image. frame theme object rendering frame drawn around bar. Usually, object element_rect() expected. element_blank() (default), frame drawn. frame.colour string specifying colour frame drawn around bar. backward compatibility, argument NULL, frame argument set element_rect(). frame.linewidth numeric specifying width frame drawn around bar millimetres. frame.linetype numeric specifying linetype frame drawn around bar. ticks theme object rendering tick marks colourbar. Usually, object element_line() expected (default). element_blank(), tick marks drawn. backward compatibility, can also logical translates TRUE element_line() FALSE element_blank(). ticks.colour string specifying colour tick marks. ticks.linewidth numeric specifying width tick marks millimetres. ticks.length numeric grid::unit() object specifying length tick marks colourbar. draw.ulim logical specifying upper limit tick marks visible. draw.llim logical specifying lower limit tick marks visible. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating grid::unit() barwidth barheight. reverse logical. TRUE colourbar reversed. default, highest value top lowest value bottom order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. available_aes vector character strings listing aesthetics colourbar can drawn.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_cap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capped colour bar guide — guide_colourbar_cap","text":"<Guide> ggproto object can given guides() function, set guide argument colour fill scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_cap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capped colour bar guide — guide_colourbar_cap","text":"","code":"# A standard plot with continuous colour scale p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty)) +   scale_colour_viridis_c()  # By default, the bar is capped by equilateral triangles p + guides(colour = guide_colourbar_cap())   # This can be changed by setting a different cap shape p + guides(colour = guide_colourbar_cap(cap_shape = \"arched\"))   # To cap just one end, use the `cap_position` argument p + guides(colour = guide_colourbar_cap(cap_position = \"upper\"))   # The `cap_size` argument can be used to stretch or squish the cap p + guides(colour = guide_colourbar_cap(cap_size  = unit(1, \"cm\"),                                         cap_shape = \"round\"))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Vanilla grid guide — guide_grid","title":"Vanilla grid guide — guide_grid","text":"guide draw regular panel grid, optional break adjustments.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vanilla grid guide — guide_grid","text":"","code":"guide_grid(   breaks = waiver(),   minor_breaks = waiver(),   x_breaks = waiver(),   y_breaks = waiver(),   x_minor_breaks = waiver(),   y_minor_breaks = waiver(),   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vanilla grid guide — guide_grid","text":"breaks default major breaks specification inherited x_breaks y_breaks arguments. minor_breaks default minor breaks specification inherited x_minor_breaks y_minor_breaks arguments. x_breaks, y_breaks Specifications major breaks. Inherits breaks argument. One : NULL breaks. waiver() default breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns breaks output. Also accepts lambda function notation. x_minor_breaks, y_minor_breaks Specifications minor breaks. Inherits minor_breaks argument. One : NULL minor breaks. waiver() default minor breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns vector minor breaks output. Also accepts lambda function notation. ... Currently use.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vanilla grid guide — guide_grid","text":"<Guide> ggproto object can given guides() function, set guide argument coord_guided().","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vanilla grid guide — guide_grid","text":"","code":"# A standard plot p <- ggplot(mpg, aes(class, displ)) +   geom_boxplot()  # Giving a vector of x-breaks between discrete categories p + coord_guided(guide = guide_grid(x_breaks = 0.5:7.5))   # Identical to above, but passing a function for the x-breaks, and using # the `guides()` interface. p + coord_guided() +   guides(grid = guide_grid(x_breaks = breaks_between()))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"'Plus' grid guide — guide_grid_plus","title":"'Plus' grid guide — guide_grid_plus","text":"guide draws panel grid, displays grid lines points intersect. grid lines look like '+' symbol.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Plus' grid guide — guide_grid_plus","text":"","code":"guide_grid_plus(   length = 1,   length_major = NULL,   length_minor = NULL,   length_x_major = NULL,   length_x_minor = NULL,   length_y_major = NULL,   length_y_minor = NULL,   edge = TRUE,   edge_x = NULL,   edge_y = NULL,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Plus' grid guide — guide_grid_plus","text":"length numeric(1) length arm plus symbol millimetres. Can Inf display regular lines. length_major, length_minor Inherits length argument specify lengths major minor grid lines. length_x_major, length_y_major Inherits length_major argument specify major x- y-grid lines. length_x_minor, length_y_minor Inherits length_minor argument specify minor x- y-grid lines. edge logical(1) whether draw grid lines panel edge (TRUE, default) (FALSE). edge_x, edge_y Inherits edge argument x- y-gridlines specifically. ... Arguments passed guide_grid breaks default major breaks specification inherited x_breaks y_breaks arguments. minor_breaks default minor breaks specification inherited x_minor_breaks y_minor_breaks arguments. x_breaks,y_breaks Specifications major breaks. Inherits breaks argument. One : NULL breaks. waiver() default breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns breaks output. Also accepts lambda function notation. x_minor_breaks,y_minor_breaks Specifications minor breaks. Inherits minor_breaks argument. One : NULL minor breaks. waiver() default minor breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns vector minor breaks output. Also accepts lambda function notation.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Plus' grid guide — guide_grid_plus","text":"<Guide> ggproto object can given guides() function, set guide argument coord_guided().","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'Plus' grid guide — guide_grid_plus","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # A 'plus' grid p + coord_guided(guide = \"grid_plus\")   # Setting larger plusses p + coord_guided(guide = guide_grid_plus(length = 4))   # Drawing one direction as regular lines p + coord_guided(guide = guide_grid_plus(length_y_major = Inf))   # Omitting the ticks at the edge p + coord_guided(guide = guide_grid_plus(edge = FALSE))   # Turning off the minor gridlines p + coord_guided(guide = guide_grid_plus(minor_breaks = NULL))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":null,"dir":"Reference","previous_headings":"","what":"Zebra grid — guide_grid_zebra","title":"Zebra grid — guide_grid_zebra","text":"guide draw panel grid alternating stripes, resembling stripes zebra, like pedestrian crosswalk.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zebra grid — guide_grid_zebra","text":"","code":"guide_grid_zebra(   direction = \"x\",   rect = element_rect(),   rect_x = NULL,   rect_y = NULL,   at = \"major\",   at_x = NULL,   at_y = NULL,   odd = TRUE,   odd_x = NULL,   odd_y = NULL,   breaks = waiver(),   x_breaks = waiver(),   y_breaks = waiver(),   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zebra grid — guide_grid_zebra","text":"direction Either \"x\" \"y\" \"\" indicating direction zebra stripes drawn. \"\", orthogonal direction regular grid lines. rect element_rect element_blank object display zebra stripes. Internally inherits panel.grid.major theme setting, line's colour field becomes rectangle's fill field. rect_x, rect_y Inherits rect argument, x y directions respectively. One \"major\" (default), \"minor\" \"\" indicating breaks display stripes. at_x, at_y Inherits argument, x y directions respectively. odd logical(1) whether fill odd stripes (TRUE, default) even stripes (FALSE). odd_x, odd_y Inherits odd argument, x y directions respectively. breaks default major breaks specification inherited x_breaks y_breaks arguments. x_breaks, y_breaks Specifications major breaks. Inherits breaks argument. One : NULL breaks. waiver() default breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns breaks output. Also accepts lambda function notation. ... Arguments passed guide_grid minor_breaks default minor breaks specification inherited x_minor_breaks y_minor_breaks arguments. x_minor_breaks,y_minor_breaks Specifications minor breaks. Inherits minor_breaks argument. One : NULL minor breaks. waiver() default minor breaks computed scale. numeric vector positions. discrete scales, can also character vector. function takes limits input returns vector minor breaks output. Also accepts lambda function notation.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zebra grid — guide_grid_zebra","text":"<Guide> ggproto object can given guides() function, set guide argument coord_guided().","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zebra grid — guide_grid_zebra","text":"discrete scales, function internally default placing major breaks direction dimension levels. restore classic major breaks discrete scales, one can set relevant breaks_{x/y} = seq_along.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_grid_zebra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zebra grid — guide_grid_zebra","text":"","code":"# A standard plot p <- ggplot(economics, aes(date, unemploy)) +   geom_line()  # Adding a zebra grid p + coord_guided(guide = \"grid_zebra\")   # Filling the even stripes p + coord_guided(guide = guide_grid_zebra(odd = FALSE))   # Including the minor breaks for zebra stripes p + coord_guided(guide = guide_grid_zebra(at = \"minor\"))   # Customising the look of the stripes p + coord_guided(guide = guide_grid_zebra(   rect = element_rect(fill = \"grey95\", colour = \"white\", linetype = \"dotted\") ))   # Using zebra stripes as a gingham pattern p + coord_guided(guide = guide_grid_zebra(direction = 'both', at = \"minor\")) +   theme(panel.grid.major = element_line(colour = alpha(\"white\", 0.5)))"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross table legend guide — guide_legend_cross","title":"Cross table legend guide — guide_legend_cross","text":"Like regular legends, guide shows keys mapped onto values. useful displaying interaction two variables intuitively linear legend.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross table legend guide — guide_legend_cross","text":"","code":"guide_legend_cross(   sep = \"[^[:alnum:]]+\",   label_order = c(\"row\", \"column\"),   h_label.theme = element_text(),   h_label.position = \"right\",   v_label.theme = element_text(angle = 90, vjust = 0.5),   v_label.position = \"bottom\",   reverse = FALSE,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross table legend guide — guide_legend_cross","text":"sep character(1) NULL. : character(1) Acts 'regex' pattern split single set labels two parts. Defaults non-alphanumeric pattern. Note special regex characters need escaped, splitting period \"\\\\.\". NULL Disables string splitting, used combining two scales share labels single legend. See examples . label_order character(2) giving order dimensions first second label map . Can either c(\"row\", \"column\") c(\"column\", \"row\"). h_label.theme, v_label.theme <element_text> (default) <element_blank> object controlling appearance horizontal (left/right) vertical (top/bottom) labels respectively. inherit legend.text setting plot's theme. h_label.position, v_label.position character(1) indicating position label. h_label.position can one \"left\" \"right\" (default), whereas v_label.position can one \"top\" \"bottom\" (default). reverse logical(2) logical(1) internally gets recycled length 2. reverse[1] TRUE, reverses order first label. reverse[2] TRUE, reverses order second label. Defaults c(FALSE, FALSE). ... Arguments passed ggplot2::guide_legend title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. keywidth numeric grid::unit() object specifying width legend key. Default value legend.key.width legend.key.size theme(). keyheight numeric grid::unit() object specifying height legend key. Default value legend.key.height legend.key.size theme(). direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating grid::unit() keywidth keyheight. override.aes list specifying aesthetic parameters legend key. See details examples. order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross table legend guide — guide_legend_cross","text":"<Guide> ggproto object can given guides() function, set guide argument non-position scale.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross table legend guide — guide_legend_cross","text":"guide finds interaction two variables trying split compound label. Unfortunately, might require work format splittable labels. Moreover, one intends use guide show interaction , example: shapes colours, shape colour scales return compound labels.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross table legend guide — guide_legend_cross","text":"","code":"# Display interaction by mapping a compound variable ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = paste(cyl, year))) +   guides(colour = \"legend_cross\")   # To make a cross legend for two scales, the plot must satisfy 2 criteria: # 1. Both scales need the same name/title. # 2. The guide needs `sep = NULL` to disable label splitting. # The easiest way to do this is to make one guide and feed it to both scales. guide <- guide_legend_cross(sep = NULL, title = \"My Title\")  ggplot(mtcars, aes(mpg, disp)) +   geom_point(aes(colour = factor(cyl), shape = factor(vs))) +   guides(colour = guide, shape = guide)"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_string.html","id":null,"dir":"Reference","previous_headings":"","what":"String legend — guide_legend_string","title":"String legend — guide_legend_string","text":"type legend shows colour fill mappings coloured text. draw keys guide_legend() .","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String legend — guide_legend_string","text":"","code":"guide_legend_string(   title = waiver(),   title.position = NULL,   title.theme = NULL,   title.hjust = NULL,   title.vjust = NULL,   label.theme = NULL,   label.hjust = NULL,   label.vjust = NULL,   family = NULL,   face = NULL,   size = NULL,   direction = NULL,   override.aes = list(),   nrow = NULL,   ncol = NULL,   byrow = FALSE,   reverse = FALSE,   order = 0,   ... )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String legend — guide_legend_string","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.position character string indicating position title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). label.hjust numeric specifying horizontal justification label text. default standard text 0 (left-aligned) 1 (right-aligned) expressions. label.vjust numeric specifying vertical justification label text. family, face, size Shortcuts setting label.theme fields family, face size element_text(). direction character string indicating direction guide. One \"horizontal\" \"vertical.\" override.aes list specifying aesthetic parameters legend key. See details examples. nrow desired number rows legends. ncol desired number column legends. byrow logical. FALSE (default) legend-matrix filled columns, otherwise legend-matrix filled rows. reverse logical. TRUE order legends reversed. order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. ... ignored.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String legend — guide_legend_string","text":"<Guide> ggproto object can given guides() function, set guide argument colour fill scale.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_legend_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"String legend — guide_legend_string","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = manufacturer)) +   geom_point()  # This guide gives the mapping as coloured labels p + guides(colour = \"legend_string\")   # The controls are the same as in `guide_legend` p + guides(colour = guide_legend_string(   ncol = 2, face = \"bold\", byrow = TRUE ))"},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"gguidance-0009000","dir":"Changelog","previous_headings":"","what":"gguidance 0.0.0.9000","title":"gguidance 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
