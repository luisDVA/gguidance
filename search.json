[{"path":"https://teunbrand.github.io/gguidance/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Teun van den Brand Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teunbrand.github.io/gguidance/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teun van den Brand. Author, maintainer.","code":""},{"path":"https://teunbrand.github.io/gguidance/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van den Brand T (2024). gguidance: Extended guide options 'ggplot2'. R package version 0.0.0.9001, https://teunbrand.github.io/gguidance/.","code":"@Manual{,   title = {gguidance: Extended guide options for 'ggplot2'},   author = {Teun {van den Brand}},   year = {2024},   note = {R package version 0.0.0.9001},   url = {https://teunbrand.github.io/gguidance/}, }"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"gguidance-","dir":"","previous_headings":"","what":"Extended guide options for ggplot2","title":"Extended guide options for ggplot2","text":"goal gguidance provide additional guide functionality ggplot2 ecosystem.","code":""},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extended guide options for ggplot2","text":"can install development version gguidance GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"teunbrand/gguidance\")"},{"path":"https://teunbrand.github.io/gguidance/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Extended guide options for ggplot2","text":"Let’s first set basic plot experiment : gguidance package offers selection calls ‘complete guides’. complete guides can just drop-replacement regular guides, can specify using ggplot2’s guides() function using guide argument scales. example , ’re using two custom variants vanilla guides, namely guide_axis_custom() guide_colourbar_custom(). custom variants additional options allow greater degree customisation: axis guide option bidirectional ticks. colourbar automatically recognises --bounds values displays cap.  Besides complete guides, gguidance also incomplete guides can composed. ggplot2::guide_axis_stack() axis composition function can used display multiple guides. , use ‘primitive’ guide (incomplete building block) display range axis. stacking regular axis primitive guide completed.  gguidance package extends guide composition concept beyond axes types guides. example compose ‘sandwich’: central guide flanked two others. bracket primitive, matter aesthetic displays can re-use sandwich. ’ve yet write vignette composition.","code":"library(gguidance) #> Loading required package: ggplot2  base <- ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point() +   labs(     x = \"Engine displacement\",     y = \"Highway miles per gallon\",     col = \"City miles\\nper gallon\"   ) +   theme(axis.line = element_line()) base +    scale_colour_viridis_c(     limits = c(NA, 30),     guide = \"colourbar_custom\"   ) +   guides(     x = guide_axis_custom(bidi = TRUE)   ) # A partial guide to display a bracket efficient_bracket <- primitive_bracket(   # Keys determine what is displayed   key = key_range_manual(start = 25, end = Inf, name = \"Efficient\"),   bracket = \"square\",   # We want vertical text   theme = theme(     legend.text = element_text(angle = 90, hjust = 0.5),     axis.text.y.left = element_text(angle = 90, hjust = 0.5)   ) )  base + guides(y = guide_axis_stack(\"axis\", efficient_bracket)) base +    scale_colour_viridis_c(     guide = compose_sandwich(       middle = gizmo_density(),        text = \"axis_custom\",       opposite = efficient_bracket     )   )"},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Bracket options — bracket_options","title":"Bracket options — bracket_options","text":"functions construct various sorts brackets. construct matrix can supplied bracket argument primitive_bracket().","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bracket options — bracket_options","text":"","code":"bracket_line()  bracket_square()  bracket_chevron()  bracket_round(angle = 180, n = 100)  bracket_sigmoid(curvature = 10, n = 100)  bracket_atan(curvature = 5, n = 100)  bracket_curvy(angle = 225, n = 100)"},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bracket options — bracket_options","text":"angle numeric(1): angle degrees circle piece drawn. bracket_curvy(), angle 180 270. n integer(1) number points use bracket. curvature numeric(1) controls curliness bracket. precisely, used construct sequence seq(-curvature, curvature, length.= n) logistic arctangent functions evaluated.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bracket options — bracket_options","text":"<matrix[n, 2]> coordinates points brackets.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bracket options — bracket_options","text":"designing custom bracket shapes, expectation columns number 0 1. first column follows direction guide whereas second column orthogonal direction.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Bracket options — bracket_options","text":"bracket_line(): simple line bracket. n = 2 points. bracket_square(): square bracket. n = 4 points. bracket_chevron(): chevron (V-shape) makes bracket. n = 3 points. bracket_round(): One circular arc makes bracket. bracket_sigmoid(): Two sigmoid curves stacked top one another form bracket. bracket_atan(): Two arctangent curves stacked top one another form bracket. bracket_curvy(): Four circular arcs make bracket.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/bracket_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bracket options — bracket_options","text":"","code":"plot(bracket_sigmoid(), type = 'l')"},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Cap options — cap_options","title":"Cap options — cap_options","text":"functions construct various sorts caps. construct matrix can supplied shape argument gizmo_barcap().","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cap options — cap_options","text":"","code":"cap_triangle()  cap_round(n = 100)  cap_arch(n = 100)  cap_ogee(n = 100)  cap_none()"},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cap options — cap_options","text":"n <integer[n]> number points use cap.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cap options — cap_options","text":"<matrix[n, 2]> coordinates points brackets.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cap options — cap_options","text":"designing custom cap shapes, expectation first point starts (0, 0) coordinate last point ends (0, 1) coordinate. first column follows orthogonal direction bar whereas second column follows direction bar.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Cap options — cap_options","text":"cap_triangle(): equilateral triangle n = 3 points. cap_round(): semicircle. cap_arch(): Two circular arcs forming equilateral Gothic arch. cap_ogee(): Four circular arcs forming 'ogee' arch. cap_none(): cap.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/cap_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cap options — cap_options","text":"","code":"plot(cap_arch(), type = 'l')"},{"path":"https://teunbrand.github.io/gguidance/reference/common_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"common parameters in gguidance — common_parameters","title":"common parameters in gguidance — common_parameters","text":"collection common parameters needn't re-documented time.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/common_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"common parameters in gguidance — common_parameters","text":"title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. available_aes <character> vector listing aesthetics guide can build. direction <character[1]> indicating direction guide. Can \"horizontal\" \"vertical\". angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_crux.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose guides in a cross — compose_crux","title":"Compose guides in a cross — compose_crux","text":"guide composition central guide optionally surrounded guides four sides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_crux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose guides in a cross — compose_crux","text":"","code":"compose_crux(   key = NULL,   centre = \"none\",   left = \"none\",   right = \"none\",   top = \"none\",   bottom = \"none\",   args = list(),   complete = FALSE,   theme = NULL,   theme_defaults = list(),   reverse = FALSE,   order = 0,   title = waiver(),   position = waiver(),   available_aes = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_crux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose guides in a cross — compose_crux","text":"key standard key specification. key shared among guides NULL keys . See information linked topic. centre, left, right, top, bottom Guides use composition per position. guide can specified one following: <Guide> class object. <function> returns <Guide> class object. <character> naming function, without guide_ primitive_ prefix. args <list> arguments pass guides given either function string. complete <logical[1]> whether treat composition complete guide. TRUE, title margin added result. FALSE (default), titles margins added. theme <theme> object style guide individually differently plot's theme settings. theme arguments guide overrides, combined , plot's theme. theme_defaults <list> theme elements override undeclared theme arguments. reverse <logical[1]> whether reverse continuous guides. TRUE, guides like colour bars flipped. FALSE (default), original order maintained. order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. position guide drawn: one \"top\", \"bottom\", \"left\", \"right\". available_aes <character> vector listing aesthetics guide can build.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_crux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose guides in a cross — compose_crux","text":"<ComposeCrux> guide object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/compose_crux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose guides in a cross — compose_crux","text":"","code":"NULL #> NULL"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_ontop.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose guides on top of one another — compose_ontop","title":"Compose guides on top of one another — compose_ontop","text":"guide can place place guides top one another.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_ontop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose guides on top of one another — compose_ontop","text":"","code":"compose_ontop(   ...,   args = list(),   key = NULL,   title = waiver(),   angle = waiver(),   theme = NULL,   order = 0,   position = waiver(),   available_aes = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_ontop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose guides on top of one another — compose_ontop","text":"... Guides stack composition. guide can specified one following: <Guide> class object. <function> returns <Guide> class object. <character[1]> naming function, without guide_ primitive_ prefix. args <list> arguments pass guides given either function string. key standard key specification. key shared among guides NULL keys . See information linked topic. title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". available_aes <character> giving aesthetics must match guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_ontop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose guides on top of one another — compose_ontop","text":"<ComposeOntop> composite guide object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/compose_ontop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose guides on top of one another — compose_ontop","text":"","code":"# Using the ontop composition to get two types of ticks with different # lengths ggplot(mpg, aes(displ, hwy)) +   geom_point() +   guides(x = compose_ontop(     guide_axis_custom(       key_manual(c(2, 4, 6)),       theme = theme(         axis.ticks = element_line(colour = \"limegreen\"),         axis.ticks.length = unit(11, \"pt\")       )     ),     guide_axis_custom(       key_manual(c(3, 5, 7)),       theme = theme(         axis.ticks = element_line(colour = \"tomato\"),         axis.ticks.length = unit(5.5, \"pt\")       )     )   )) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose guides as a sandwich — compose_sandwich","title":"Compose guides as a sandwich — compose_sandwich","text":"guide composition middle guide flanked two parallel guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose guides as a sandwich — compose_sandwich","text":"","code":"compose_sandwich(   key = key_auto(),   middle = gizmo_barcap(),   text = \"none\",   opposite = \"none\",   args = list(),   complete = TRUE,   theme = NULL,   theme_defaults = list(),   reverse = FALSE,   order = 0,   title = waiver(),   position = waiver(),   available_aes = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose guides as a sandwich — compose_sandwich","text":"key standard key specification. key shared among guides NULL keys . See information linked topic. middle Guide use middle guide. guide can specified one following: <Guide> class object. <function> returns <Guide> class object. <character> naming function, without guide_ primitive_ prefix. text, opposite Guides use legend.text.position location opposite side middle guide respectively. Guide specification middle argument. args <list> arguments pass guides given either function string. complete <logical[1]> whether treat composition complete guide. TRUE, title margin added result. FALSE (default), titles margins added. theme <theme> object style guide individually differently plot's theme settings. theme arguments guide overrides, combined , plot's theme. theme_defaults <list> theme elements override undeclared theme arguments. reverse <logical[1]> whether reverse continuous guides. TRUE, guides like colour bars flipped. FALSE (default), original order maintained. order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. position guide drawn: one \"top\", \"bottom\", \"left\", \"right\". available_aes <character> vector listing aesthetics guide can build.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose guides as a sandwich — compose_sandwich","text":"<ComposeSandwich> guide object.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compose guides as a sandwich — compose_sandwich","text":"sandwich composition effectively crux composition lacking two opposing arms.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/compose_sandwich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose guides as a sandwich — compose_sandwich","text":"","code":"# A standard plot with a sandwich guide ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty)) +   guides(colour = compose_sandwich(     middle = \"colourbar\",     text = \"axis_custom\",     opposite = primitive_bracket(key = key_range_manual(       start = c(10, 20), end = c(25, 30), name = c(\"A\", \"B\")     ))   )) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose guides as stack — compose_stack","title":"Compose guides as stack — compose_stack","text":"guide can stack guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose guides as stack — compose_stack","text":"","code":"compose_stack(   ...,   args = list(),   key = NULL,   title = waiver(),   side.titles = waiver(),   angle = waiver(),   theme = NULL,   order = 0,   drop = NULL,   position = waiver(),   available_aes = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/compose_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose guides as stack — compose_stack","text":"... Guides stack composition. guide can specified one following: <Guide> class object. <function> returns <Guide> class object. <character[1]> naming function, without guide_ primitive_ prefix. args <list> arguments pass guides given either function string. key standard key specification. key shared among guides NULL keys . See information linked topic. title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. side.titles <character> giving labels titles displayed side stack. Set NULL display side titles. waiver(), attempt made extract titles guides use side titles. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. drop <integer> giving indices guides dropped facet requests labels drawn axes panels. default, NULL, drop every guide except first. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". available_aes <character> giving aesthetics must match guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/compose_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose guides as stack — compose_stack","text":"<ComposeStack> guide object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/compose_stack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose guides as stack — compose_stack","text":"","code":"ggplot() +   geom_function(fun = dnorm, xlim = c(-3, 3)) +   guides(x = compose_stack(     \"axis\", \"axis\",     side.titles = c(\"first\", \"second\")   )) +   # Add margin to make room for side titles   theme(plot.margin = margin(5.5, 5.5, 5.5, 11))"},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","title":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","text":"'ggplot2' extension focusses expanding plotter's arsenal guides, axes, legends colour bars.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gguidance: Extended guide options for 'ggplot2' — gguidance-package","text":"Maintainer: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gguidance_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"ggproto objects in gguidance — Compose","title":"ggproto objects in gguidance — Compose","text":"gguidance package relies extension system ggplot2 ggproto class objects, allow cross-package inheritance objects geoms, stats, facets, scales coordinate systems. purpose making plots, users invited wholly ignore objects, since interacting objects preferred various constructor functions. gguidance package introduces new <Guide> ggproto class support variations axes, legends colourbars.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_barcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmo: capped colour bar — gizmo_barcap","title":"Guide gizmo: capped colour bar — gizmo_barcap","text":"guide displays colour bar optional caps either ends bar.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_barcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide gizmo: capped colour bar — gizmo_barcap","text":"","code":"gizmo_barcap(   key = \"sequence\",   shape = \"triangle\",   size = NULL,   show = NA,   alpha = NA,   oob = \"keep\",   theme = NULL,   position = waiver(),   direction = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_barcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide gizmo: capped colour bar — gizmo_barcap","text":"key sequence key specification. Defaults key_sequence(n = 15). Changing argument key_sequence() fine, changing key type advised. shape cap specification providing one following: cap <function>, cap_triangle(). <character[1]> naming cap function without 'cap_'-prefix, e.g. \"round\". two column <matrix[n, 2]> giving coordinates cap, like created cap functions cap_arch(). size <unit> setting size cap. NULL (default), cap size proportional shape coordinates legend.key.size theme setting. show <logical> control caps displayed ends bar. TRUE, caps always displayed. FALSE, caps never displayed. NA (default), caps displayed data range exceed limits. given <logical[2]>, show[1] controls display lower end show[2] upper end. alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". direction <character[1]> indicating direction guide. Can \"horizontal\" \"vertical\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_barcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide gizmo: capped colour bar — gizmo_barcap","text":"<GizmoBarcap> object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_barcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide gizmo: capped colour bar — gizmo_barcap","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point()  # Just a bar p + scale_colour_viridis_c(guide = gizmo_barcap()) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Caps show up when there is data outside the limits p + scale_colour_viridis_c(   limits = c(10, 30),   guide  = gizmo_barcap() ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # The scale's out-of-bounds handler determines cap colour p + scale_colour_viridis_c(   limits = c(10, 30), oob = scales::oob_squish,   guide = gizmo_barcap() ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Customising display of the guide p +   scale_colour_viridis_c(     oob = scales::oob_squish,     guide = gizmo_barcap(       shape = \"arch\", show = c(FALSE, TRUE),       size = unit(2, \"cm\"),       theme = theme(legend.key.height = unit(4, \"cm\"))     )   ) +   theme(     legend.frame = element_rect(colour = \"black\"),     legend.key.width = unit(0.5, \"cm\")   ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmo: kernel density estimate — gizmo_density","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"guide displays kernel density estimate (KDE) aesthetic. aesthetic colour fill, shape reflect .","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"","code":"gizmo_density(   key = \"sequence\",   density = NULL,   density.args = list(),   density.fun = stats::density,   just = 0.5,   oob = \"keep\",   alpha = NA,   theme = NULL,   position = waiver(),   direction = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"key sequence key binned key specification. density One following: NULL using kernel density estimation data values (default). <numeric> vector feed density.fun function. named <list> x y numeric elements equal length, one returned using density() function. Please note <list> input expected scale-transformed space, original data space. density.args <list> additional arguments density.fun argument. applies density provided <list>. already. density.fun <function> use kernel density estimation density argument provided list already. just <numeric[1]> 0 1. Use 0 bottom- left-aligned densities, use 1 top- right-aligned densities 0.5 violin shapes. oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". direction <character[1]> indicating direction guide. Can \"horizontal\" \"vertical\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"<GizmoDensity> object.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"Non-finite values NA NaN ignored infinite values -Inf Inf squished limits.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide gizmo: kernel density estimate — gizmo_density","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point() +   scale_colour_viridis_c()  # Density from plot data p + guides(colour = gizmo_density()) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Using bins instead of gradient p + guides(colour = gizmo_density(\"bins\")) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Providing custom values to compute density of p + guides(colour = gizmo_density(density = runif(1000, min = 5, max = 35))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Providing a precomputed density p + guides(colour = gizmo_density(density = density(mpg$cty, adjust = 0.5))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Alternatively, parameters may be passed through density.args p + guides(colour = gizmo_density(density.args = list(adjust = 0.5))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmo: custom grob — gizmo_grob","title":"Guide gizmo: custom grob — gizmo_grob","text":"guide displays user-provided grob.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide gizmo: custom grob — gizmo_grob","text":"","code":"gizmo_grob(   grob,   width = grobWidth(grob),   height = grobHeight(grob),   hjust = 0.5,   vjust = 0.5,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide gizmo: custom grob — gizmo_grob","text":"grob <grob> display. width, height [<unit[1]>][grid::unit] setting allocated width height grob respectively. hjust, vjust <numeric[1]> 0 1 setting horizontal vertical justification grob used guide x y aesthetics. position guide drawn: one \"top\", \"bottom\", \"left\", \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide gizmo: custom grob — gizmo_grob","text":"<GizmoGrob> object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_grob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide gizmo: custom grob — gizmo_grob","text":"","code":"circle <- grid::circleGrob()  # A standard plot with grob gizmos ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point() +   guides(     x.sec = gizmo_grob(       circle, hjust = 0.75,       width = unit(2, \"cm\"), height = unit(2, \"cm\")     ),     colour = gizmo_grob(       circle, width = unit(1, \"cm\"), height = unit(1, \"cm\")     )   )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmo: histogram — gizmo_histogram","title":"Guide gizmo: histogram — gizmo_histogram","text":"guide displays histogram aesthetic. aesthetic colour fill, shape reflect .","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide gizmo: histogram — gizmo_histogram","text":"","code":"gizmo_histogram(   key = \"sequence\",   hist = NULL,   hist.args = list(),   hist.fun = graphics::hist,   just = 1,   oob = oob_keep,   alpha = NA,   theme = NULL,   position = waiver(),   direction = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide gizmo: histogram — gizmo_histogram","text":"key sequence key binned key specification. hist One following: NULL computing histograms data values (default). atomic <vector> feed hist.fun function. named <list> breaks counts numeric items, breaks item exactly one element longer counts item. typical way construct list using hist() function. Please note <list> input expected scale-transformed space, original data space. hist.args <list> additional arguments hist.fun argument. applies hist provided <list> already. hist.fun <function> use computing histograms hist argument provided list already. just <numeric[1]> 0 1. Use 0 bottom- left-aligned histograms, use 1 top- right-aligned histograms 0.5 centred histograms. oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". direction <character[1]> indicating direction guide. Can \"horizontal\" \"vertical\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide gizmo: histogram — gizmo_histogram","text":"<GizmoHistogram> object.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Guide gizmo: histogram — gizmo_histogram","text":"Non-finite values NA NaN ignored infinite values -Inf Inf squished limits.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide gizmo: histogram — gizmo_histogram","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point() +   scale_colour_viridis_c()  # Histogram from plot data p + guides(colour = gizmo_histogram()) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Using bins instead of gradient p + guides(colour = gizmo_histogram(\"bins\")) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Providing custom values to compute histogram p + guides(colour = gizmo_histogram(hist = runif(1000, min = 5, max = 35))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Providing precomputed histogram p + guides(colour = gizmo_histogram(hist = hist(mpg$cty, breaks = 10))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Alternatively, parameters may be passed through hist.args p + guides(colour = gizmo_histogram(hist.arg = list(breaks = 10))) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_stepcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmo: capped colour steps — gizmo_stepcap","title":"Guide gizmo: capped colour steps — gizmo_stepcap","text":"guide displays binned variant colour bar optional caps either ends bar.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_stepcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide gizmo: capped colour steps — gizmo_stepcap","text":"","code":"gizmo_stepcap(   key = \"bins\",   shape = \"triangle\",   size = NULL,   show = NA,   alpha = NA,   oob = \"keep\",   theme = NULL,   position = waiver(),   direction = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_stepcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide gizmo: capped colour steps — gizmo_stepcap","text":"key bins key specificiation. Defaults key_bins(even.steps = FALSE, show.limits = NULL). Changing arguments key_bins() fine, changing key type advised. shape cap specification providing one following: cap <function>, cap_triangle(). <character[1]> naming cap function without 'cap_'-prefix, e.g. \"round\". two column <matrix[n, 2]> giving coordinates cap, like created cap functions cap_arch(). size <unit> setting size cap. NULL (default), cap size proportional shape coordinates legend.key.size theme setting. show <logical> control caps displayed ends bar. TRUE, caps always displayed. FALSE, caps never displayed. NA (default), caps displayed data range exceed limits. given <logical[2]>, show[1] controls display lower end show[2] upper end. alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". direction <character[1]> indicating direction guide. Can \"horizontal\" \"vertical\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_stepcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide gizmo: capped colour steps — gizmo_stepcap","text":"GizmoStepcap object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/gizmo_stepcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide gizmo: capped colour steps — gizmo_stepcap","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = cty)) +   geom_point()  # Just some recangles p + scale_colour_viridis_c(guide = gizmo_stepcap()) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Caps show up when there is data outside the limits p + scale_colour_viridis_c(   limits = c(10, 30),   guide = gizmo_stepcap() ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # The scale's out-of-bounds handler determines cap colour p + scale_colour_viridis_c(   limits = c(10, 30), oob = scales::oob_squish,   guide = gizmo_stepcap() ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Customising the display of the guide p +   scale_colour_viridis_c(     oob = scales::oob_squish,     guide = gizmo_stepcap(       shape = \"round\", show = c(FALSE, TRUE),       size = unit(1, \"cm\"),       theme = theme(legend.key.height = unit(4, \"cm\"))     )   ) +   theme(     legend.frame = element_rect(colour = \"black\"),     legend.key.width = unit(0.5, \"cm\")   ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/guide-composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide composition — guide-composition","title":"Guide composition — guide-composition","text":"Guide composition meta-guide orchestrating ensemble guides. , 'composing' guide useful visual reflection scale.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide-composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide composition — guide-composition","text":"","code":"new_compose(   guides,   args = list(),   ...,   available_aes = c(\"any\", \"x\", \"y\", \"r\", \"theta\"),   call = caller_env(),   super = Compose )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide-composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide composition — guide-composition","text":"guides <list> guides wherein element one following: <Guide> class object. <function> returns <Guide> class object. <character[1]> naming function, without guide_ primitive_ prefix. args <list> arguments pass guides given either function string. ... Additional parameters pass new_guide(). available_aes <character> giving aesthetics must match guides. call call display messages. super <Compose> class object giving meta-guide composition.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide-composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide composition — guide-composition","text":"<Compose> (sub-)class guide composes guides.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide-composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide composition — guide-composition","text":"","code":"# new_compose() is not intended to be used directly"},{"path":"https://teunbrand.github.io/gguidance/reference/guide-gizmos.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide gizmos — guide-gizmos","title":"Guide gizmos — guide-gizmos","text":"Guide gizmos speciality guide components specific one aesthetics display. Typically can composed guides guide primitives form complete guide.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide-primitives.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitives — guide-primitives","title":"Guide primitives — guide-primitives","text":"Guide primitives building blocks complex guides. , useful visual reflection scale. purpose combined one another form complex, complete guides reflect scale way.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide-primitives.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Guide primitives — guide-primitives","text":"guide primitives simple, flexible tailored one particular aesthetic. way can reused combined .","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom axis guide — guide_axis_custom","title":"Custom axis guide — guide_axis_custom","text":"axis guide visual representation position scales can represent x, y, theta r aesthetics. differs guide_axis() can accept custom keys can act axis coord_radial() like guide_axis_theta().","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom axis guide — guide_axis_custom","text":"","code":"guide_axis_custom(   key = NULL,   title = waiver(),   theme = NULL,   n.dodge = 1,   check.overlap = FALSE,   angle = waiver(),   cap = \"none\",   bidi = FALSE,   order = 0,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom axis guide — guide_axis_custom","text":"key standard key specification. Defaults key_auto(). See information linked topic 'Details' section. title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. n.dodge positive <integer[1]> setting number layers text labels can occupy avoid overlapping labels. check.overlap <logical[1]> indicating whether check omit overlapping text. TRUE, first, last middle labels recursively prioritised order. FALSE, labels drawn. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. cap method cap axes. One following: <character[1]> one following: \"none\" perform capping. \"\" cap line ends extreme breaks. \"upper\" cap line upper extreme break. \"lower\" cap line lower extreme break. <logical>[1], TRUE equivalent \"\" FALSE equivalent \"none\" options . sorted <numeric>[2n] even number members. lines drawn every odd-even pair. <function> takes scale's breaks first argument, scale's limits second argument returns <numeric>[2n] described . bidi <logical[1]>: whether ticks drawn bidirectionally (TRUE) single direction (FALSE, default). order positive <integer[1]> specifies order guide among multiple guides. controls order guides merged multiple guides position. 0 (default), order determined hashing indicative settings guide. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom axis guide — guide_axis_custom","text":"<Guide> object.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom axis guide — guide_axis_custom","text":"hood, guide stack composition line, ticks labels primitives. set minor ticks, use key = \"minor\", use type argument key_manual() key_map(). use logarithmic axis, set key = \"log\".","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_axis_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom axis guide — guide_axis_custom","text":"","code":"# A standard plot with custom keys p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   scale_x_continuous(     guide = guide_axis_custom(key = key_minor())   ) +   scale_y_continuous(     guide = guide_axis_custom(key = key_manual(c(20, 25, 30, 40)))   ) p #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Is translated to theta axis without fuss p + coord_radial() #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # To use as logarithmic axis: ggplot(msleep, aes(bodywt, brainwt)) +   geom_point(na.rm = TRUE) +   scale_x_continuous(     transform = \"log10\",     guide = guide_axis_custom(\"log\")   ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom colour bar guide — guide_colourbar_custom","title":"Custom colour bar guide — guide_colourbar_custom","text":"Similar guide_colourbar(), guide displays continuous colour fill aesthetics. additional options display caps end bar, depending --bounds values.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom colour bar guide — guide_colourbar_custom","text":"","code":"guide_colourbar_custom(   title = waiver(),   key = \"auto\",   first_guide = \"axis_custom\",   second_guide = first_guide,   shape = \"triangle\",   size = NULL,   show = NA,   nbin = 15,   alpha = NA,   reverse = FALSE,   oob = scales::oob_keep,   theme = NULL,   position = waiver(),   available_aes = c(\"colour\", \"fill\") )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom colour bar guide — guide_colourbar_custom","text":"title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. key sequence key specification. Defaults key_sequence(n = 15). Changing argument key_sequence() fine, changing key type advised. first_guide, second_guide Guides flank colour bar. guide can specified using one following: <Guide> class object. <function> returns <Guide> class object. <character> naming function, without guide_ primitive_ prefix. first_guide placed location specified legend.text.position theme setting. second_guide placed opposite position. second_guide label suppression mechanism, labels drawn guide. shape cap specification providing one following: cap <function>, cap_triangle(). <character[1]> naming cap function without 'cap_'-prefix, e.g. \"round\". two column <matrix[n, 2]> giving coordinates cap, like created cap functions cap_arch(). size <unit> setting size cap. NULL (default), cap size proportional shape coordinates legend.key.size theme setting. show <logical> control caps displayed ends bar. TRUE, caps always displayed. FALSE, caps never displayed. NA (default), caps displayed data range exceed limits. given <logical[2]>, show[1] controls display lower end show[2] upper end. nbin positive <integer[1]> determining many colours use colour gradient. alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . reverse <logical[1]> whether reverse continuous guides. TRUE, guides like colour bars flipped. FALSE (default), original order maintained. oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". available_aes <character> vector listing aesthetics guide can build.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom colour bar guide — guide_colourbar_custom","text":"<Guide> object","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom colour bar guide — guide_colourbar_custom","text":"colours always rendered gradients, important use graphics device can render . can checked using check_device(\"gradients\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_colourbar_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom colour bar guide — guide_colourbar_custom","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty))  # The colourbar shows caps when values are out-of-bounds (oob) p + scale_colour_viridis_c(   limits = c(10, NA),   guide = \"colourbar_custom\" ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # It also shows how oob values are handled p + scale_colour_viridis_c(   limits = c(10, NA), oob = scales::oob_squish,   guide = \"colourbar_custom\" ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Adjusting the type of cap p + scale_colour_viridis_c(   limits = c(10, 30), oob = scales::oob_squish,   guide = guide_colourbar_custom(shape = \"round\") ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # One-sided ticks p + scale_colour_viridis_c(   guide = guide_colourbar_custom(second_guide = \"none\") ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Colour bar with minor breaks p + scale_colour_viridis_c(   minor_breaks = scales::breaks_width(1),   guide = guide_colourbar_custom(key = \"minor\") ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Using log ticks on a colourbar ggplot(msleep, aes(sleep_total, sleep_rem)) +   geom_point(aes(colour = bodywt), na.rm = TRUE) +   scale_colour_viridis_c(     transform = \"log10\",     guide = guide_colourbar_custom(key = \"log\")   ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom colour steps guide — guide_coloursteps_custom","title":"Custom colour steps guide — guide_coloursteps_custom","text":"Similar guide_coloursteps(), guide displays continuous colour fill aesthetics. additional options display caps end bar, depending --bounds values.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom colour steps guide — guide_coloursteps_custom","text":"","code":"guide_coloursteps_custom(   title = waiver(),   key = \"bins\",   first_guide = \"labels\",   second_guide = \"none\",   shape = \"triangle\",   size = NULL,   show = NA,   alpha = NA,   reverse = FALSE,   oob = scales::oob_keep,   theme = NULL,   position = waiver(),   available_aes = c(\"colour\", \"fill\") )"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom colour steps guide — guide_coloursteps_custom","text":"title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. key bins key specificiation. Defaults key_bins(even.steps = FALSE, show.limits = NULL). Changing arguments key_bins() fine, changing key type advised. first_guide, second_guide Guides flank colour steps. guide can specified using one following: <Guide> class object. <function> returns <Guide> class object. <character> naming function, without guide_ primitive_ prefix. first_guide placed location specified legend.text.position theme setting. second_guide placed opposite position. second_guide label suppression mechanism, labels drawn guide. shape cap specification providing one following: cap <function>, cap_triangle(). <character[1]> naming cap function without 'cap_'-prefix, e.g. \"round\". two column <matrix[n, 2]> giving coordinates cap, like created cap functions cap_arch(). size <unit> setting size cap. NULL (default), cap size proportional shape coordinates legend.key.size theme setting. show <logical> control caps displayed ends bar. TRUE, caps always displayed. FALSE, caps never displayed. NA (default), caps displayed data range exceed limits. given <logical[2]>, show[1] controls display lower end show[2] upper end. alpha <numeric[1]> 0 1 setting colour transparency bar. Use NA preserve alpha encoded colour . reverse <logical[1]> whether reverse continuous guides. TRUE, guides like colour bars flipped. FALSE (default), original order maintained. oob --bounds handling function affects cap colour. Can one following: <function> like oob_squish. <character[1]> naming function without 'oob'-prefix, \"keep\". theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\". available_aes <character> vector listing aesthetics guide can build.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom colour steps guide — guide_coloursteps_custom","text":"<Guide> object","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom colour steps guide — guide_coloursteps_custom","text":"steps rendered clipped rectangles, important use graphics device can render clipped paths. can checked using check_device(\"clippingPaths\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_coloursteps_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom colour steps guide — guide_coloursteps_custom","text":"","code":"p <- ggplot(mpg, aes(displ, hwy)) +   geom_point(aes(colour = cty))  # The colour steps show caps when values are out-of-bounds p + scale_colour_viridis_b(   limits = c(10, NA),   guide = \"coloursteps_custom\" ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # It also shows how oob values are handled p + scale_colour_viridis_b(   limits = c(10, 30), oob = scales::oob_censor,   guide = \"coloursteps_custom\" ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Adjusting the type of cap p + scale_colour_viridis_b(   limits = c(10, 30),   guide = guide_coloursteps_custom(shape = \"round\") ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # The default is to use the breaks as-is p + scale_colour_viridis_b(   limits = c(10, 30), breaks = c(10, 20, 25),   guide = \"coloursteps_custom\" ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # But the display can be set to use evenly spaced steps p + scale_colour_viridis_b(   limits = c(10, 30), breaks = c(10, 20, 25),   guide = guide_coloursteps_custom(key = key_bins(even.steps = TRUE)) ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'  # Using tick marks by swapping side guides p + scale_colour_viridis_b(   guide = guide_coloursteps_custom(     first_guide  = \"axis_custom\",     second_guide = \"axis_custom\"   ) ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtitle with coloured phrases — guide_subtitle","title":"Subtitle with coloured phrases — guide_subtitle","text":"guides formats piece text colours determined scale.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtitle with coloured phrases — guide_subtitle","text":"","code":"guide_subtitle(title = waiver(), open = \"{.\", close = \"}\", theme = NULL)"},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtitle with coloured phrases — guide_subtitle","text":"title <character[1]> containing text use subtitle. Text formatting discussed details. open, close <character[1]> delimiter indicating colour formatting begins (open) ends (close). theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtitle with coloured phrases — guide_subtitle","text":"<Guide> object.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"text-formatting","dir":"Reference","previous_headings":"","what":"Text formatting","title":"Subtitle with coloured phrases — guide_subtitle","text":"Chunks text formatted follows: title chopped pieces split open close delimiters. open delimiter followed integer, integer matched scale's breaks. piece text open delimiter associated close delimiter coloured break's colour. example, title \"{.1 quick} brown {.3 fox} jumps {.2 lazy dog}.\", word \"quick\" given scale's first colour, \"fox\" given third colour \"lazy dog\" given second colour. first space integer index gets trimmed. text inside braces index, scale's labels inserted text. implemented legend guide, takes style options plot.subtitle theme element. true subtitle, might complications guides co-occupy \"top\" legend position.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"right-to-left-scripts","dir":"Reference","previous_headings":"","what":"Right-to-left scripts","title":"Subtitle with coloured phrases — guide_subtitle","text":"typesetting guide primitive concerns placing text pieces, individual glyphs. consideration given right--left script line converted LtR RtL pieces text line contain characters RtL character sets. Bidirectional text given consideration within function. Glyphs ligatures normal text, separate pieces probably render ligatures. task actually rendering within pieces text, handled graphics device, varying degrees modern text feature support. author function, knows LtR natural languages, profusely apologises inconvenience.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/guide_subtitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtitle with coloured phrases — guide_subtitle","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) +   geom_point()  # Typical use case p + scale_colour_discrete(   name = \"Cars with {.1 four}, {.2 five}, {.3 six} or {.4 eight} cylinders.\",   guide = \"subtitle\" )   # If there is no text in between the delimiters, the scale's `labels` are # substituted. p + scale_colour_discrete(   labels = c(\"FOUR\", \"5\", \"Six\", \"foobar\"),   name   = \"Cars with {.1}, {.2}, {.3} or {.4} cylinders.\",   guide  = \"subtitle\" )   # Using different text delimiters p + guides(colour = guide_subtitle(   \"Cars with <1 four>, <2 five>, <3 six> or <4 eight> cylinders.\",   open = \"<\", close = \">\" ))   # # For use with {ggtext}, mix html with the open and closing delimiters. # # Leave out the '\\' before quotation marks, it didn't document without # # these backslashes :( # p + #   scale_colour_discrete( #     name  = \\\"Cars with {.1}, <b>{.2 five}<\/b>, {.3} or {.4} <i>cylinders<\/i>.\\\", #     guide = \"subtitle\" #   ) + #   theme(plot.subtitle = ggtext::element_markdown())"},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Range keys — key_range","title":"Range keys — key_range","text":"functions helper functions working ranged data keys guides. share goal creating guide key, different methods: key_range_auto() function factory whose functions make attempt infer ranges scale's labels. key_range_manual() uses user-provided vectors set ranges. key_range_map() makes mappings <data.frame> set ranges.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range keys — key_range","text":"","code":"key_range_auto(sep = \"[^[:alnum:]]+\", reverse = FALSE)  key_range_manual(start, end, name = NULL, level = NULL)  key_range_map(data, ..., .call = caller_env())"},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range keys — key_range","text":"sep <character[1]> giving regular expression use splitting labels provided scale using strsplit(). Defaults splitting non-alphanumeric character. reverse <logical[1]> FALSE (default) treats first labels inner labels last labels outer labels. TRUE, thee first labels treated outer labels last labels treated inner labels. start, end vector can interpreted scale, giving start end positions range respectively. name <character> list expressions level <integer> giving depth range avoid overlaps different ranges. level smaller 1, brackets drawn. data <data.frame> similar object coerced fortify() <data.frame>, mapping argument evaluated. ... <data-masking> set mappings similar provided aes(), evaluated data argument. must contain start end mappings. .call call display messages.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range keys — key_range","text":"key_range_auto() function. key_range_manual() key_range_map() <data.frame> <key_range> class.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Range keys — key_range","text":"level variable optional missing, guides use algorithm similar IRanges::disjointBins() avoid overlaps. key_range_auto() work expression labels.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/key_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range keys — key_range","text":"","code":"# Example scale template <- scale_x_discrete(limits = c(\"A 1\", \"B 1\", \"C&1\", \"D&2\", \"E&2\"))  # By default, splits on all non-alphanumeric characters auto <- key_range_auto() auto(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Only split on a specific character auto <- key_range_auto(sep = \"&\") auto(template) #> Warning: Not all labels in `key_range_auto()` can be split into equal lengths. #> ℹ Is \"&\" the correct `sep` argument? #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Treating the letters as outer labels and numbers as inner labels auto <- key_range_auto(reverse = TRUE) auto(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Providing custom values key_range_manual(   start = c(1, 5,  10),   end   = c(4, 15, 11),   level = c(0, 2, 1),   name  = c(\"A\", \"B\", \"C\") ) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Values from a <data.frame> key_range_map(presidential, start = start, end = end, name = name) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/key_specialty.html","id":null,"dir":"Reference","previous_headings":"","what":"Speciality keys — key_specialty","title":"Speciality keys — key_specialty","text":"functions helper functions working keys guides. functions described widely applicable may apply small subset guides. , fine adjust arguments speciality key, swapping types ill-advised. key_sequence() function factory whose functions create regularly spaced sequence limits scale. used colour bar guides. key_bins() function factory whose function create binned key given breaks scale. used colour steps guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_specialty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speciality keys — key_specialty","text":"","code":"key_sequence(n = 15)  key_bins(even.steps = FALSE, show.limits = NULL)"},{"path":"https://teunbrand.github.io/gguidance/reference/key_specialty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speciality keys — key_specialty","text":"n positive <integer[1]> giving number colours use gradient. even.steps <logical[1]> indicating whether size bins displayed equal (TRUE) proportional length data space (FALSE). show.limits <logical[1]> stating whether limits scale shown labels ticks (TRUE) remain hidden (FALSE). Note breaks coinciding limits shown regardless setting. default, NULL, consults scale's show.limits setting defaults FALSE.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_specialty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Speciality keys — key_specialty","text":"key_sequence() function.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/key_specialty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speciality keys — key_specialty","text":"","code":"# An example scale template <- scale_fill_viridis_c(limits = c(0, 10), breaks = c(2, 4, 6, 8))  # Retrieving colourbar and colourstep keys key_sequence()(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list' key_bins()(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/key_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard keys — key_standard","title":"Standard keys — key_standard","text":"functions helper functions working tick marks keys guides. share goal creating guide key, different outcomes: key_auto() function factory whose functions extract typical key major breaks scale. key_manual() uses user-provided vectors make key. key_map() makes mappings <data.frame> make key. key_minor() function factory whose functions also extract minor break positions minor tick marks. key_log() function factory whose functions place ticks intervals log10 space.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard keys — key_standard","text":"","code":"key_auto()  key_manual(   aesthetic,   value = aesthetic,   label = as.character(value),   type = NULL )  key_map(data, ..., .call = caller_env())  key_minor()  key_log(   prescale_base = NULL,   negative_small = 0.1,   expanded = TRUE,   labeller = NULL )"},{"path":"https://teunbrand.github.io/gguidance/reference/key_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard keys — key_standard","text":"aesthetic, value vector values guide represent equivalent breaks argument scales. aesthetic mapped, whereas value . intents purposes, aesthetic value identical. label <character> list expressions use labels. type <character> vector representing one break types: \"major\", \"minor\" \"mini\". NULL (default), breaks treated major breaks. data <data.frame> similar object coerced fortify() <data.frame>, mapping argument evaluated. ... <data-masking> set mappings similar provided aes(), evaluated data argument. must contain aesthetic mapping. .call call display messages. prescale_base <numeric[1]> giving base logarithm transform data manually. default, NULL, use scale transformation calculate positions. advisable set prescale_base argument data already log-transformed. using log-transform scale coord_trans(), default NULL recommended. negative_small <numeric[1]> setting smallest absolute value marked tick case scale limits include 0 negative numbers. expanded <logical[1]> determining whether ticks cover entire range scale expansion (TRUE, default), restricted scale limits (FALSE). labeller <function> receives major breaks returns formatted labels. key_log(), NULL default scales::label_log() strictly positive numbers custom labeller negative numbers included.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/key_standard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard keys — key_standard","text":"key_auto(), key_minor() key_log() function. key_manual() key_map() <data.frame> <key_standard> class.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/key_standard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard keys — key_standard","text":"","code":"# An example scale template <- scale_x_continuous(limits = c(0, 10))  # The auto, minor and log keys operate on scales key_auto()(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list' key_minor()(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # So does the log key template <- scale_x_continuous(transform = \"log10\", limits = c(0.1, 10)) key_log()(template) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Providing custom values key_manual(   aesthetic = 1:5,   label = c(\"one\", \"two\", \"three\", \"four\", \"five\") ) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'  # Values from a `<data.frame>` key_map(ToothGrowth, aesthetic = unique(supp)) #> Error in derive_pubkey(x): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitives: boxes — primitive_box","title":"Guide primitives: boxes — primitive_box","text":"function constructs boxes guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitives: boxes — primitive_box","text":"","code":"primitive_box(   key = \"range_auto\",   angle = waiver(),   oob = \"squish\",   drop_zero = TRUE,   pad_discrete = 0.4,   min_size = NULL,   theme = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitives: boxes — primitive_box","text":"key range key specification. See information linked topic. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. oob method dealing --bounds (oob) ranges. Can one \"squish\", \"censor\" \"none\". drop_zero <logical[1]> whether drop near-zero width ranges (TRUE, default) preserve (FALSE). pad_discrete <numeric[1]> giving amount ranges extended given discrete variable. applied drop_zero setting. min_size [<grid::unit[1]>][grid::unit] setting minimal size box. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitives: boxes — primitive_box","text":"<PrimitiveBox> primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitives: boxes — primitive_box","text":"theme options determine styling guide, may differ depending whether guide used axis legend context. Common types following: gguidance.box <element_rect> boxes draw.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitives: boxes — primitive_box","text":"axis.text.{x/y}.{position} <element_text> text inside boxes.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"as-a-legend-guide","dir":"Reference","previous_headings":"","what":"As a legend guide","title":"Guide primitives: boxes — primitive_box","text":"legend.text <element_text> text inside boxes.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitives: boxes — primitive_box","text":"","code":"# A standard plot p <- ggplot(mpg, aes(interaction(drv, year), displ)) +  geom_point()  key <- key_range_manual(c(2, 4), c(5, 6), c(\"A\", \"B\"))  # Adding as secondary guides p + guides(   x.sec = primitive_box(),   y.sec = primitive_box(key = key) ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: brackets — primitive_bracket","title":"Guide primitive: brackets — primitive_bracket","text":"function constructs brackets guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: brackets — primitive_bracket","text":"","code":"primitive_bracket(   key = \"range_auto\",   bracket = \"line\",   angle = waiver(),   oob = \"squish\",   drop_zero = TRUE,   pad_discrete = 0.4,   theme = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: brackets — primitive_bracket","text":"key range key specification. See information linked topic. bracket bracket providing one following: bracket <function>, bracket_square. <character[1]> naming bracket function without 'bracket_'-prefix, e.g. \"square\". two-column <matrix[n, 2]> giving line coordinates bracket, like created bracket functions, bracket_round(). angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. oob method dealing --bounds (oob) ranges. Can one \"squish\", \"censor\" \"none\". drop_zero <logical[1]> whether drop near-zero width ranges (TRUE, default) preserve (FALSE). pad_discrete <numeric[1]> giving amount ranges extended given discrete variable. applied drop_zero setting. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: brackets — primitive_bracket","text":"<PrimitiveBracket> primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: brackets — primitive_bracket","text":"theme options determine styling guide, may differ depending whether guide used axis legend context. Common types following: gguidance.bracket <element_line> line used draw brackets. gguidance.backet.size <unit> setting space afforded bracket.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitive: brackets — primitive_bracket","text":"axis.text.{x/y}.{position} <element_text> text displayed brackets.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"as-a-legend-guide","dir":"Reference","previous_headings":"","what":"As a legend guide","title":"Guide primitive: brackets — primitive_bracket","text":"legend.text <element_text> text displayed brackets.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_bracket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: brackets — primitive_bracket","text":"","code":"# A standard plot p <- ggplot(mpg, aes(interaction(drv, year), displ)) +  geom_point()  key <- key_range_manual(c(2, 4), c(5, 6), c(\"A\", \"B\"))  # Adding as secondary guides p + guides(   x.sec = primitive_bracket(),   y.sec = primitive_bracket(key = key) ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: labels — primitive_labels","title":"Guide primitive: labels — primitive_labels","text":"function constructs labels guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: labels — primitive_labels","text":"","code":"primitive_labels(   key = NULL,   angle = waiver(),   n.dodge = 1,   check.overlap = FALSE,   theme = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: labels — primitive_labels","text":"key standard key specification. See information linked topic. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. n.dodge positive <integer[1]> setting number layers text labels can occupy avoid overlapping labels. check.overlap <logical[1]> indicating whether check omit overlapping text. TRUE, first, last middle labels recursively prioritised order. FALSE, labels drawn. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: labels — primitive_labels","text":"<PrimitiveLabels> primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: labels — primitive_labels","text":"theme options determine styling guide, may differ depending whether guide used axis legend context.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitive: labels — primitive_labels","text":"axis.text.{x/y}.{position} <element_text> display labels.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"as-a-legend-guide-","dir":"Reference","previous_headings":"","what":"As a legend guide.","title":"Guide primitive: labels — primitive_labels","text":"legend.text <element_text> display labels.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: labels — primitive_labels","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +  geom_point()  # Adding as secondary guides p + guides(   x.sec = primitive_labels(),   y.sec = primitive_labels(n.dodge = 2) ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: line — primitive_line","title":"Guide primitive: line — primitive_line","text":"function constructs line guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: line — primitive_line","text":"","code":"primitive_line(key = NULL, cap = \"none\", theme = NULL, position = waiver())"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: line — primitive_line","text":"key standard key specification. See information linked topic. cap method cap axes. One following: <character[1]> one following: \"none\" perform capping. \"\" cap line ends extreme breaks. \"upper\" cap line upper extreme break. \"lower\" cap line lower extreme break. <logical>[1], TRUE equivalent \"\" FALSE equivalent \"none\" options . sorted <numeric>[2n] even number members. lines drawn every odd-even pair. <function> takes scale's breaks first argument, scale's limits second argument returns <numeric>[2n] described . theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: line — primitive_line","text":"PrimitiveLine primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: line — primitive_line","text":"theme options determine styling guide, may differ depending whether guide used axis legend context.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitive: line — primitive_line","text":"axis.line.{x/y}.{position} <element_line> line style.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"as-a-legend-guide","dir":"Reference","previous_headings":"","what":"As a legend guide","title":"Guide primitive: line — primitive_line","text":"legend.axis.line <element_line> line style.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: line — primitive_line","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme(axis.line = element_line())  # Adding as secondary guides p + guides(   x.sec = primitive_line(),   y.sec = primitive_line(cap = \"both\") ) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: spacer — primitive_spacer","title":"Guide primitive: spacer — primitive_spacer","text":"function constructs spacer guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: spacer — primitive_spacer","text":"","code":"primitive_spacer(   space = NULL,   title = waiver(),   theme = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: spacer — primitive_spacer","text":"space [<unit[1]>][grid::unit()] title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: spacer — primitive_spacer","text":"<PrimitiveSpacer> primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: spacer — primitive_spacer","text":"#' theme options determine styling guide. guide option dependent role axis legend. gguidance.guide.spacing <unit> setting amount spacing space argument NULL.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_spacer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: spacer — primitive_spacer","text":"","code":"ggplot(mpg, aes(displ, hwy)) +   geom_point() +   guides(     x = guide_axis_stack(\"axis\", primitive_spacer(unit(1, \"cm\")), \"axis\")   )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: line — primitive_ticks","title":"Guide primitive: line — primitive_ticks","text":"function constructs ticks guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: line — primitive_ticks","text":"","code":"primitive_ticks(key = NULL, bidi = FALSE, theme = NULL, position = waiver())"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: line — primitive_ticks","text":"key standard key specification. See information linked topic. bidi <logical[1]>: whether ticks drawn bidirectionally (TRUE) single direction (FALSE, default). theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: line — primitive_ticks","text":"PrimitiveTicks primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: line — primitive_ticks","text":"theme options determine styling guide, may differ depending whether guide used axis legend context. Common types following:","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitive: line — primitive_ticks","text":"axis.ticks.{x/y}.{position} <element_line> major tick lines. axis.minor.ticks.{x/y}.{position} <element_line> minor tick lines. gguidance.axis.mini.ticks <element_line> internally inheriting minor ticks smallest ticks e.g. log axes. axis.ticks.length.{x/y}.{position} <unit> major ticks length. axis.minor.ticks.length.{x/y}.{position} <unit> minor ticks length. gguidance.axis.mini.ticks.length <unit> internally inheriting minor tick length smallest ticks e.g. log axes.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"as-a-legend-guide","dir":"Reference","previous_headings":"","what":"As a legend guide","title":"Guide primitive: line — primitive_ticks","text":"legend.ticks <element_line> major tick lines. gguidance.legend.minor.ticks <element_line> minor tick lines. gguidance.legend.mini.ticks <element_line> smallest ticks e.g. log axes. legend.ticks.length <unit> major ticks length. gguidance.legend.minor.ticks.length <unit> minor ticks length. gguidance.legend.mini.ticks.length <unit> smallest ticks e.g. log axes.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_ticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: line — primitive_ticks","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +   geom_point()  # Adding as secondary guides p + guides(x.sec = primitive_ticks(), y.sec = primitive_ticks()) #> Error in derive_pubkey(key): RAW() can only be applied to a 'raw', not a 'list'"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide primitive: title — primitive_title","title":"Guide primitive: title — primitive_title","text":"function constructs title guide primitive.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide primitive: title — primitive_title","text":"","code":"primitive_title(   title = waiver(),   angle = waiver(),   theme = NULL,   position = waiver() )"},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guide primitive: title — primitive_title","text":"title <character[1]> <expression[1]> indicating title guide. NULL, title shown. default, waiver(), takes name scale object name specified labs() title. angle specification text angle. Compared setting angle argument element_text(), argument uses heuristics automatically pick hjust vjust probably want. Can one following: NULL take angles justification settings directly theme. waiver() allow reasonable defaults special cases. <numeric[1]> -360 360 text angle degrees. theme <theme> object style guide individually differently plot's theme settings. theme argument guide overrides combined plot's theme. position <character[1]> giving location guide. Can one \"top\", \"bottom\", \"left\" \"right\".","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide primitive: title — primitive_title","text":"<PrimitiveTitle> primitive guide can used inside guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"styling-options","dir":"Reference","previous_headings":"","what":"Styling options","title":"Guide primitive: title — primitive_title","text":"theme options determine styling guide, may differ depending whether guide used axis legend context.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"as-an-axis-guide","dir":"Reference","previous_headings":"","what":"As an axis guide","title":"Guide primitive: title — primitive_title","text":"axis.title.{x/y}.{position} <element_text> title display.","code":""},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"as-a-legend-guide","dir":"Reference","previous_headings":"","what":"As a legend guide","title":"Guide primitive: title — primitive_title","text":"legend.title <element_text> title display.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/gguidance/reference/primitive_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide primitive: title — primitive_title","text":"","code":"# A standard plot p <- ggplot(mpg, aes(displ, hwy)) +  geom_point()  # Adding as secondary guides p + guides(   x.sec = primitive_title(\"Horizontal Title\"),   y.sec = primitive_title(c(\"along vertical\", \"Multiple tiles\")) )"},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"gguidance-0009001","dir":"Changelog","previous_headings":"","what":"gguidance 0.0.0.9001","title":"gguidance 0.0.0.9001","text":"Restarted package scratch, using different approach.","code":""},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"mechanism-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Mechanism","title":"gguidance 0.0.0.9001","text":"crux gguidance combine ‘key’, contains instructions values represented, ‘guide’ controls values represented.","code":""},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"full-guides-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Full guides","title":"gguidance 0.0.0.9001","text":"Full guides guides can just drop guides() function guide argument scales. guide_axis_custom() axis guide. guide_colourbar_custom() colour/fill guide. guide_coloursteps_custom() colour/fill guide. guide_subtitle() colour/fill guide.","code":""},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"gizmos-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Gizmos","title":"gguidance 0.0.0.9001","text":"Gizmos standalone specialised displays. gizmo_barcap() displaying colour gradients capping options. gizmo_stepcap() displaying stepped gradients capping options. gizmo_density() displaying gradient-filled densities. gizmo_histogram() displaying gradient-filled histograms. gizmo_grob() displaying custom grobs.","code":""},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"compositions-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Compositions","title":"gguidance 0.0.0.9001","text":"Compositions offer ways combine guides. compose_stack() stacking guides. compose_ontop() overlaying guides. compose_crux() layout guides cross. compose_sandwich() flanked guides.","code":""},{"path":"https://teunbrand.github.io/gguidance/news/index.html","id":"primitives-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Primitives","title":"gguidance 0.0.0.9001","text":"Primitives basic elements guides use. primitive_line() lines. primitive_ticks() tick marks. primitive_labels() text labels. primitive_spacer() empty space. primitive_title() text titles. primitive_bracket() labelled brackets. primitive_box() rectangles.","code":""}]
